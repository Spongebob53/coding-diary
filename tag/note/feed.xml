<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://spongebob53.github.io/tag/note/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://spongebob53.github.io/" rel="alternate" type="text/html" />
  <updated>2021-12-10T22:39:41+09:00</updated>
  <id>https://spongebob53.github.io/tag/note/feed.xml</id>

  
  
  

  
    <title type="html">Coding Diary | </title>
  

  
    <subtitle>개발 기록</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">note - 1차 프로젝트(4조) 리뷰</title>
      <link href="https://spongebob53.github.io/note-1project4" rel="alternate" type="text/html" title="note - 1차 프로젝트(4조) 리뷰" />
      <published>2021-12-07T18:00:00+09:00</published>
      <updated>2021-12-07T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/note-1project4</id>
      <content type="html" xml:base="https://spongebob53.github.io/note-1project4">&lt;p&gt;프로젝트 발표중 인상 깊었던 세 팀에 대한 코드 리뷰&lt;/p&gt;

&lt;p&gt;4조 선택 이유 - 스토리 구성, 코드 체계, 완성도 등 그들의 의욕이 가장 강하게 느껴졌다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://learn2code-yk.tistory.com/&quot;&gt;4조 팀원1 블로그 가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://osymi236-blog.tistory.com/&quot;&gt;4조 팀원2 블로그 가기&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A_Go.java
C_Start.java
D_SecondFloor.java
E_FirstFloor.java
.....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;처음에 B가 없어서 당황했다..!&lt;/p&gt;

&lt;p&gt;아무튼 작은 프로젝트의 경우 유용한 방법이라 생각했다&lt;/p&gt;

&lt;p&gt;프로그램의 흐름 순서로 정렬이 되어 가독성이 매우 좋았다&lt;/p&gt;

&lt;p&gt;더 나아가면 처음부터 삼행시 하듯이 이름을 지어주는 것도 나름 괜찮은 방법일지도?&lt;/p&gt;

&lt;p&gt;한번 시도해보는 것도 재밌을 것 같다&lt;/p&gt;

&lt;p&gt;클래스로 이야기 들려주는 느낌, 색다른 접근법으로 다가왔다&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++){&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;____&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;구분선을 반복문으로 출력을 한게 신선한 충격이였다&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fstOutTry1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fstOutTry1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;필드 fstOutTry에 true를 대입한 상태로, 1번 실행시 false로 초기화하면서 반복실행을 막았다&lt;/p&gt;

&lt;p&gt;재밌다!!!!재밌는 방법이다&lt;/p&gt;

&lt;p&gt;궁금해서 찾아보니 boolean에 대입을 하지 않으면 기본값이 false로 주어진다는 점을 이용했으면 더 깔끔한 코드가 되지 않았을까 싶다!&lt;/p&gt;

&lt;p&gt;같은 맥락으로 필드에 boolean이 아니라 char 타입을 null로 참거짓을 판단하는건 어떨까?&lt;/p&gt;

&lt;p&gt;써먹어보고 싶다&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toothTracker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tooth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아이템 같은 부분은 바로 대입을 해줘도 될 거 같은데 메소드화 시킨 이유가 있을까?&lt;/p&gt;

&lt;p&gt;예를들어 G_Basement 클래스에서 st.dolkal=true;로 줬을 때 오류가 있나?&lt;/p&gt;

&lt;h3 id=&quot;전체-후기&quot;&gt;전체 후기&lt;/h3&gt;

&lt;p&gt;코드 중간중간 고민의 흔적이 담긴 주석을 따라 고민해보며 코드를 읽었더니 더 재밌었다&lt;/p&gt;

&lt;p&gt;구조가 어려운 것도 아니고, 배우지 않은 메소드를 사용한 것도 아니고, 수업을 착실하게 들어온 모범생 느낌의 프로젝트였다&lt;/p&gt;

&lt;p&gt;지금까지 배운 내용을 기반으로 할 수 있는 모든 것들을 시도한 것 같다&lt;/p&gt;

&lt;p&gt;다른 팀에서 흔이 볼 수 있는 static이 보이지 않는다!&lt;/p&gt;

&lt;p&gt;확실히 절제하면서 개발한게 느껴진다&lt;/p&gt;

&lt;p&gt;스토리 진행, 클래스 배분 등 세세한 부분 하나까지도 신경쓰고 노력한게 느껴져서 프로젝트 발표하는 내내 감탄했고, 존경스러웠다&lt;/p&gt;

&lt;p&gt;이런 분들의 지식이 점점 더 늘어나면 어떤 결과가 나올지 기대된다!&lt;/p&gt;

&lt;p&gt;앞으로도 보고 배울게 많은 분들이라 생각한다&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="note" />
      

      
        <summary type="html">프로젝트 발표중 인상 깊었던 세 팀에 대한 코드 리뷰</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">note - 1차 프로젝트(1조) 리뷰</title>
      <link href="https://spongebob53.github.io/note-1project1" rel="alternate" type="text/html" title="note - 1차 프로젝트(1조) 리뷰" />
      <published>2021-12-06T18:00:00+09:00</published>
      <updated>2021-12-06T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/note-1project1</id>
      <content type="html" xml:base="https://spongebob53.github.io/note-1project1">&lt;p&gt;프로젝트 발표중 인상 깊었던 세 팀에 대한 코드 리뷰&lt;/p&gt;

&lt;p&gt;1조 선택 이유 - “JAVA의 탑” 이라는 아이디어가 너무 마음에 들었다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://m.blog.naver.com/PostList.naver?blogId=xdo19&quot;&gt;1조 팀원1 블로그 가기&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_game&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Q : ““을 입력한 이유가 있나? 아래 예시가 더 깔끔하지 않나?&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A : 제 코드를 조원분께 이해시켜야 했기 때문에 가독성을 늘리고 더 명확한 해설이 되었으면 해서 이렇게 작성했습니다&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_sel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_sel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Q : if 와 switch의 조건이 동일해 보이는데 2중으로 사용한 이유가 있을까?&lt;/p&gt;

&lt;p&gt;A : 저도 못찾아낸 허점..&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(;;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Q : 랜덤값 추출 시 중복 제거에 대한 접근법이 쉽고 간단해서 좋았다!&lt;/p&gt;

&lt;p&gt;A : 두가지 변수의 중복제거이기 때문에 가능했고, 변수가 많았다면 어려웠을 것이라 생각합니다&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stage1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Qz&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;qz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Qz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;문제 난이도 조절도 구현 했으면 좋겠다 라는 생각이 들었는데, 문제 출현 빈도를 통해서 난이도를 구현했다! 또다른 기발한 방법&lt;/p&gt;

&lt;p&gt;Q : Scanner 인스턴스가 절반 이상의 클래스에서 생성 되고 있는데 static 변수로 활용하면 편하지 않을까?&lt;/p&gt;

&lt;p&gt;A : 최대한 static을 사용하지 말고 작성해보려 했고, 설계 단계에서 조금 더 힘을 쏟았다면 달라졌을 것이라 생각합니다&lt;/p&gt;

&lt;p&gt;Q : 중간중간 입력값 확인 과정이 없는 부분은 아쉬웠다! 실행 중에 성급하게 입력하거나 오타로 죽는 경우가 다수 발생 했다&lt;/p&gt;

&lt;p&gt;A : 이런 처리가 가능하다는 것을 다른 메소드에서 보여주었기 때문에 굳이 해야하나? 라는 생각으로 넘겼습니다&lt;/p&gt;

&lt;p&gt;Q : 코드별 주석이 있어서 이해하기 편했다, 다음 개발에 참고해야겠다&lt;/p&gt;

&lt;p&gt;A : 가독성을 높이고 다른 사람에게 코드 이해를 쉽게 시켜주기 위함의 목적이 강했기 때문이라고 생각합니다&lt;/p&gt;

&lt;h3 id=&quot;전체-후기&quot;&gt;전체 후기&lt;/h3&gt;

&lt;p&gt;각 문제별 case를 지정해 사용자에게 출력을 해주는데, 문제 출력과 정답을 같은 배열에 넣어 반복되는 코드를 충분히 줄일 수 있을 것으로 보인다. 하드코딩이라 아쉬운 부분&lt;/p&gt;

&lt;p&gt;플레이어도, 개발자도 JAVA에 대해 공부할 수 있는 컨텐츠를 제작했다
지금의 우리에게 가장 최고의 선택이 될 수 있는 주제가 아닐까 하는 생각이 들었고,
아이디어와 열정이 돋보여 기회가 된다면 이런 열정을 같이 쏟아보고싶다&lt;/p&gt;

&lt;p&gt;잘 사용하지 않는 변수, 코드의 나열 방식, 개성이 돋보이는 주석, 특히 인스턴스가 코드 중간중간, 사전에 선언해서 준비한게 아닌, 꼭 필요한 순간에 생성이 된다는 점에서 코드 전체를 파악한 누군가가 대부분의 코드를 작성했다는 느낌이 들었다&lt;/p&gt;

&lt;p&gt;비난하고자 하는 의미가 아니라, 같은 기간 동안 프로젝트를 진행해왔던 학생의 입장에서 이 프로젝트에 참여한 각 팀원들의 입장에 모두 공감이 되어 안쓰러웠다&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="note" />
      

      
        <summary type="html">프로젝트 발표중 인상 깊었던 세 팀에 대한 코드 리뷰</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">note - test</title>
      <link href="https://spongebob53.github.io/note-test-copy" rel="alternate" type="text/html" title="note - test" />
      <published>2021-11-27T22:40:00+09:00</published>
      <updated>2021-11-27T22:40:00+09:00</updated>
      <id>https://spongebob53.github.io/note-test%20copy</id>
      <content type="html" xml:base="https://spongebob53.github.io/note-test-copy">&lt;p&gt;이곳은 노트입니다!!!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="note" />
      

      
        <summary type="html">이곳은 노트입니다!!!</summary>
      

      
      
    </entry>
  
</feed>
