<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://spongebob53.github.io/tag/lecture/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://spongebob53.github.io/" rel="alternate" type="text/html" />
  <updated>2021-12-22T09:28:29+09:00</updated>
  <id>https://spongebob53.github.io/tag/lecture/feed.xml</id>

  
  
  

  
    <title type="html">Coding Diary | </title>
  

  
    <subtitle>개발 기록</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Java - List</title>
      <link href="https://spongebob53.github.io/lecture-list" rel="alternate" type="text/html" title="Java - List" />
      <published>2021-12-21T18:00:00+09:00</published>
      <updated>2021-12-21T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-list</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-list">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;27일차-수업&quot;&gt;27일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;복습&quot;&gt;========복습========&lt;/h3&gt;

&lt;h3 id=&quot;제너릭&quot;&gt;제너릭&lt;/h3&gt;

&lt;p&gt;&amp;lt;&amp;gt; : 다이아몬드 기호&lt;/p&gt;

&lt;p&gt;타입 매개변수&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&amp;lt;&amp;gt; 안에 들어가는 문자&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;문자는 일반적인 규칙, 한글자 대문자로 선언&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;T, E, K, V, N 등&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{---}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;클래스명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;타입파라미터&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{---}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;타입&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;인자&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;정의&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;측&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;코드가&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;아니라&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new를&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;선언하는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;코드&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;측&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;인자에는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;클래스&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;명이&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;들어감&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;제너릭으로&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;설정한&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;형태로&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;그&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;안에&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;변수나&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;객체를&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;만듬&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;기본자료형은&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;클래스가&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;아니기&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;때문에&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;클래스로&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;진행&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;클래스명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;인스턴스명&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;클래스명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;-끝-&quot;&gt;======== 끝 ========&lt;/h3&gt;

&lt;h2 id=&quot;27일차-수업-1&quot;&gt;27일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;list&quot;&gt;List&lt;/h3&gt;

&lt;p&gt;본인 차제가 배열인 클래스&lt;/p&gt;

&lt;p&gt;클래스 뒤에 [] 붙여서 배열화 시킨 것&lt;/p&gt;

&lt;p&gt;배열은 크기가 고정이 되지만 List는 자동적으로 크기가 늘어남&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 크기를 선언하는 부분이 없음&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// list 값 추가 메소드&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 크기 값 반환 메소드&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 해당 인덱스 값 제거&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 해당 인덱스 값 반환&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;removeAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;향상된&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;for문&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;장점&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;모든&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;데이터를&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;출력&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;배열&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;넘치는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;오류가&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;없음&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;단점&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;무조건&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;전체출력&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;iterator&quot;&gt;Iterator&lt;/h3&gt;

&lt;p&gt;컬렉션 프레임 워크에 데이터를 가져오는데 특화된 클래스&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;ListIterator은&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasPrevious&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;라는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;역행으로&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;값을&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;가져오는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;메소드가&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;있음&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;set&quot;&gt;Set&lt;/h3&gt;

&lt;p&gt;list는 저장 순서가 존재하지만 set은 존재하지 않음, 중복 저장도 하지않는다는 특징이 있음&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.HashSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 오버라이딩 : 기발하다! 인스턴스 내 name 과 age의 해쉬값을 리턴하고, 1차로 거르고&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 오버라이딩 : 또 기발하다!! 2중으로 한번 더 확인한다 비교대상 인스턴스 인자로 받아서 같은지 2차로 한번 더 확인한다!!&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Ex05_set_exam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//		Hash : 암호학에서 사용하는 용어, 어떠한 입력값을 받든 &quot;10&quot;자리 글자로 변환해서 저장하는 기법&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//				특이한 케이스를 제외하고는 중복값이 존재하지 않습니다&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;HashSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HashSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;hSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;shin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;hSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;kim&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;hSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;shin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// output will be 2&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Java - Generic</title>
      <link href="https://spongebob53.github.io/lecture-generic" rel="alternate" type="text/html" title="Java - Generic" />
      <published>2021-12-20T18:00:00+09:00</published>
      <updated>2021-12-20T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-generic</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-generic">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;26일차-수업&quot;&gt;26일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;복습&quot;&gt;========복습========&lt;/h3&gt;

&lt;h3 id=&quot;추상화&quot;&gt;추상화&lt;/h3&gt;

&lt;p&gt;인터페이스, 추상 클래스, 추상 메소드&lt;/p&gt;

&lt;p&gt;정의 하려는 것을 미리 사전 정의하는 것&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램을 만들 때 사용하는 기능들을 담은 목차&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;오버라이딩을 꼭 사용하도록 구조화 시키는 것&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;부모인 인터페이스나 추상클래스를 상속받으려면 무조건 재정의 후 사용해야함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;다형성&quot;&gt;다형성&lt;/h3&gt;

&lt;p&gt;변수를 줄이기 위한 기술&lt;/p&gt;

&lt;p&gt;하나의 객체가 여러 가지 타입을 가질 수 있는 것&lt;/p&gt;

&lt;p&gt;부모의 클래스 타입 참조 변수로 자식의 클래스 타입의 인스턴스를 참조하도록 구현&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;final&quot;&gt;final&lt;/h3&gt;

&lt;p&gt;변하지 못하게끔 만드는 키워드&lt;/p&gt;

&lt;p&gt;클래스 : 상속을 금지하도록 만듬&lt;/p&gt;

&lt;p&gt;메소드 : 상속과 무관, 메소드를 재정의할 수 없게 만듬&lt;/p&gt;

&lt;p&gt;변수 : 상수화, 때문에 무조건 선언과 동시에 대입해서 선언해야함&lt;/p&gt;

&lt;h3 id=&quot;try_catch&quot;&gt;try_catch&lt;/h3&gt;

&lt;p&gt;오류가 나면 프로그램이 종료되지만, 예상되는 오류를 예외처리해 과정을 통해 종료시키지 않도록 하는 기능&lt;/p&gt;

&lt;p&gt;프로그램의 전체를 알아야 정확하게 오류의 위치에 구성하기 때문에 적절하게 구성할 필요가 있음&lt;/p&gt;

&lt;h3 id=&quot;클래스-둘러보기&quot;&gt;클래스 둘러보기&lt;/h3&gt;

&lt;p&gt;wrapper : 기본 자료타입을 참조 자료 타입으로 변경할 수 있도록 도와주는 클래스&lt;/p&gt;

&lt;p&gt;StringBuffer : String의 불변성 때문에 생기는 과부하를 피하기 위한 가변성을 가진 자료 타입&lt;/p&gt;

&lt;p&gt;그 외 Math, String, Arrays, Calendar 등&lt;/p&gt;

&lt;h3 id=&quot;-끝-&quot;&gt;======== 끝 ========&lt;/h3&gt;

&lt;h2 id=&quot;26일차-수업-1&quot;&gt;26일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;generalize&quot;&gt;generalize&lt;/h3&gt;

&lt;p&gt;하나의 조건으로 모든 것에 적용한다&lt;/p&gt;

&lt;p&gt;클래스나 메소드들을 사용할 때 내부에서 사용하는 데이터 타입을 미리 설정&lt;/p&gt;

&lt;p&gt;&amp;lt; &amp;gt; 괄호 안에 데이터 타입을 정의&lt;/p&gt;

&lt;p&gt;클래스 형태로 작성해야하고, 기본자료형 타입의 경우 wrapper class를 이용한다&lt;/p&gt;

&lt;p&gt;괄호의 위치는 클래스 명 뒤에 작성&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Obeject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;제너릭에&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;쓰는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;파라미터&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;클래스&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;외부에서&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;선언하는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;자료형&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;호출할&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;때&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;적는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;인스턴스의&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;타입으로&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;구성해줌&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{---}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Apple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Apple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 제너릭 선언		제너릭 대입&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;abox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Apple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;obox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// ClassCastException 과 같은 런타임 에러 위험 요소가 없음, 형변환 과정도 필요하지 않음&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;제너릭 매개변수 개수 상관 없음, comma로 구분&lt;/p&gt;

&lt;p&gt;매개변수 이름 일반적인 규칙&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;한글자 대문자&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;E : element&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;T : type&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;N : number&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;K : key&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;V : value&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;대입 연산자“=” 오른쪽 diamond 기호에 들어가는 값은 생략이 가능함&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{---}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;제너릭&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;매개변수는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;클래스나&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;인터페이스와&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;같이&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;부모를&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;상속받아&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;제한할&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;수&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;있다&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;제너릭&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;메소드&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Box3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeBox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 반환타입이 Box3&amp;lt;T&amp;gt; 이지만 컴파일러 입장에서는 모르기 때문에 앞쪽에서 한번 더 T가 제너릭임을 선언&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;collection-framwork&quot;&gt;Collection framwork&lt;/h3&gt;

&lt;p&gt;데이터를 저장하는 구조와 데이터를 처리하는 알고리즘 등을 구조화 해서 클래스로 구현한 것&lt;/p&gt;

&lt;p&gt;다수의 데이터를 효과적으로 처리하는 표준화된 방법 제공&lt;/p&gt;

&lt;p&gt;라이브러리와 차이점&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;라이브러리&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;클래스에 있는 정보를 가져와서 사용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;프레임 워크&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;권한이 없고, 항상 프레임 워크 안에 있는 클래스에 맡겨야함&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;지정된 변수와 지정된 함수로만 내용을 채워야함&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;제어의 역전(IoC), 흐름을 프레임 워크가 가지고 있고, 우리는 필요한 코드를 전달&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;arraylist&quot;&gt;ArrayList&lt;/h3&gt;

&lt;p&gt;배열 기반 자료구조&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Toy&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 데이터 집어넣기&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 크기 확인하기&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 데이터 가져오기&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Java - Clone</title>
      <link href="https://spongebob53.github.io/lecture-clone" rel="alternate" type="text/html" title="Java - Clone" />
      <published>2021-12-17T18:00:00+09:00</published>
      <updated>2021-12-17T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-clone</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-clone">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;25일차-수업&quot;&gt;25일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;복습&quot;&gt;========복습========&lt;/h3&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;

&lt;p&gt;Application Programming Interface&lt;/p&gt;

&lt;p&gt;자바 기본 API, 라이브러리&lt;/p&gt;

&lt;p&gt;개발에 자주 사용하는 클래스나 인터페이스들의 모음&lt;/p&gt;

&lt;h3 id=&quot;-끝-&quot;&gt;======== 끝 ========&lt;/h3&gt;

&lt;h2 id=&quot;25일차-수업-1&quot;&gt;25일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;wrapper-class&quot;&gt;Wrapper class&lt;/h3&gt;

&lt;p&gt;각각 자료형에 대해서 값의 범위, 정의가 변경되지 않음&lt;/p&gt;

&lt;p&gt;String 자료형을 int로 변경해야할 때 등등&lt;/p&gt;

&lt;p&gt;자료형을 인스턴스(객체)처럼 사용해야할 때가 있지만&lt;/p&gt;

&lt;p&gt;Object클래스를 상속받은게 아님&lt;/p&gt;

&lt;p&gt;wrapper class로 boxing 필요함, 기본자료형을 감싸줌&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;//자바가 좋아져서 unboxing 자동으로 해줌&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;object&quot;&gt;Object&lt;/h3&gt;

&lt;p&gt;모든 자바 클래스의 최고 조상 클래스&lt;/p&gt;

&lt;p&gt;상속이 없는 클래스는 기본적으로 Object를 상속받고 있음&lt;/p&gt;

&lt;h3 id=&quot;clone&quot;&gt;clone&lt;/h3&gt;

&lt;p&gt;Object 클래스의 메소드중 인스턴스를 복제하여 새로만들어서 반환해주는 기능&lt;/p&gt;

&lt;p&gt;무분별하게 작성되면 데이터의 정합성, 보호문제로 인해 문제 발생할 수 있음&lt;/p&gt;

&lt;p&gt;그래서 인터페이스 Cloneable을 구현한 클래스만 복제가 되게 끔 제한을 걸어놈&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Cloneable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getOwner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setOwner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 오버라이딩이 필수! 접근제어자가 protected고, 오류를 throws 하고 있어서 try catch도 사용해줘야하고&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cloneCar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;cloneCar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;// 내용도 복제해주는 과정이 필요함&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cloneCar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CloneNotSupportedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setOwner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Ex04_object2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;투싼&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOwner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;홍길동&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c1 : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOwner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

		&lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOwner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;임꺽정&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c1 : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOwner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c2 : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOwner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;math&quot;&gt;Math&lt;/h3&gt;

&lt;p&gt;수학에서 자주 사용하는 상수, 함수 등등을 담은 클래스&lt;/p&gt;

&lt;p&gt;모두 static으로 선언되어있어 객체를 생성하지않고 사용가능&lt;/p&gt;

&lt;h3 id=&quot;string&quot;&gt;String&lt;/h3&gt;

&lt;p&gt;String은 참조객체!&lt;/p&gt;

&lt;p&gt;불변성을 가짐, 한번 생성되면 그 값은 읽기만 할 수 있고, 변경할 수 없음&lt;/p&gt;

&lt;p&gt;변수를 만들어도 항상 주소를 같이 참조하고 있음(변수공간, 문자열 공간)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;문자열 공간 heap에 동일한 대상이 있는지 파악, 있으면 연결, 없으면 생성&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;heap 메모리에서 공간을 가장 많이 사용한다&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;stringbuffer&quot;&gt;StringBuffer&lt;/h3&gt;

&lt;p&gt;String 클래스의 방식에서 공간을 차지하는 경우를 줄임&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;StringBuffer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StringBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;안녕&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;하세요&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;capacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// buffer의 크기를 확인해주는 메소드, StringBuffer은 기본공간을 16칸으로 여유를 줌으로&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;문자열&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;연산&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;등의&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;과정에서&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;추가로&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;공간을&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;생성하는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;경우를&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;줄였다&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deleteCharAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 해딩 인덱스의 string 삭제&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 해당 범위의 string 삭제&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;아&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 해당 인덱스에 string 삽입&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;buffer&quot;&gt;Buffer&lt;/h3&gt;

&lt;p&gt;cpu와 하드디스크의 정보처리 속도의 차이가 발생&lt;/p&gt;

&lt;p&gt;버퍼라는 임시공간을 두어 속도의 격차를 효율적으로 운용&lt;/p&gt;

&lt;h3 id=&quot;arrays&quot;&gt;Arrays&lt;/h3&gt;

&lt;p&gt;java.lang.* : 기본동작들을 담당하는 클래스들의 집합, 자동 import 되어있음&lt;/p&gt;

&lt;p&gt;java.util.* : 개발하면서 사용하는 유용한 기능을 담당하는 클래스들의 집합, import 해줘야함&lt;/p&gt;

&lt;p&gt;java.util.Arrays : 배열을 다루기 위한 기능이 들어있는 클래스&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;copyOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 대상배열, 복사할 크기 입력&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;copyOfRange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 대상배열, 복사할 범위&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 대상배열, 초기화할 값&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 대상배열&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 대상배열, 정렬할 범위&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deepToString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 다차원 배열을 문자열의 형태로 보여주는 메소드&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;calendar&quot;&gt;Calendar&lt;/h3&gt;

&lt;p&gt;날짜와 시간을 담당하는 추상 클래스 : 나라마다 다르니, 재정의가 필요함&lt;/p&gt;

&lt;p&gt;GregorianCalendar : 구현된 기본 클래스&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 실행시키는 시점의 컴퓨터의 날짜와 시간정보&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Calendar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 추상클래스여서 인스턴스를 인스턴스를 만들 수 없기 때문에 메소드 이용&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SECOND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 해당 시간, 추가할 시간&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;YEAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// get할 시간단위&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 기준시간에 대한 전후 관계를 보고 boolean 반환해주는 메소드&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;after&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;YEAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2030&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 시간단위, set값&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Java - Throws</title>
      <link href="https://spongebob53.github.io/lecture-throws" rel="alternate" type="text/html" title="Java - Throws" />
      <published>2021-12-16T18:00:00+09:00</published>
      <updated>2021-12-16T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-throws</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-throws">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;24일차-수업&quot;&gt;24일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;복습&quot;&gt;========복습========&lt;/h3&gt;

&lt;h3 id=&quot;인터페이스와-추상클래스&quot;&gt;인터페이스와 추상클래스&lt;/h3&gt;

&lt;p&gt;자식클래스가 상속받아야 구현이 가능하고, 오버라이딩을 해야한다&lt;/p&gt;

&lt;h3 id=&quot;예외처리&quot;&gt;예외처리&lt;/h3&gt;

&lt;p&gt;try { — }catch(오류){ — } finally { — }&lt;/p&gt;

&lt;p&gt;오류가 발생할 것을 예상하고 그 문장을 try 블록에 작성하여&lt;/p&gt;

&lt;p&gt;오류가 발생하더라도 프로그램이 종료되지 않고 정상 진행되도록 하는 문장&lt;/p&gt;

&lt;p&gt;Exception 클래스의 자식 클래스들로 많은 오류 타입들이 있다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;오류 타입 클래스를 상속받으면 새로운 이름의 예외처리 클래스를 만들 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;try 문에서 말하는 오류 : 오타가 아니라 실제 프로그램에서 발생하는 오류&lt;/p&gt;

&lt;h3 id=&quot;-끝-&quot;&gt;======== 끝 ========&lt;/h3&gt;

&lt;h2 id=&quot;24일차-수업-1&quot;&gt;24일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;runtimeexception&quot;&gt;RuntimeException&lt;/h3&gt;

&lt;p&gt;실행 중에 오류가 발생할 수도 있고, 안할 수도 있고&lt;/p&gt;

&lt;h3 id=&quot;exception&quot;&gt;Exception&lt;/h3&gt;

&lt;p&gt;실행하기 전부터 에러날 것을 이미 예측 가능한 상태 =&amp;gt; 무조건 try catch 써야함&lt;/p&gt;

&lt;h3 id=&quot;throws&quot;&gt;throws&lt;/h3&gt;

&lt;p&gt;예외가 발생하면 예외를 뒤로 미룬다&lt;/p&gt;

&lt;p&gt;메소드에서 발생한 예외를 호출한 메소드로 전달&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Java - Interface / Try Catch</title>
      <link href="https://spongebob53.github.io/lecture-interface_trycatch" rel="alternate" type="text/html" title="Java - Interface / Try Catch" />
      <published>2021-12-15T18:00:00+09:00</published>
      <updated>2021-12-15T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-interface_trycatch</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-interface_trycatch">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;23일차-수업&quot;&gt;23일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;복습&quot;&gt;========복습========&lt;/h3&gt;

&lt;h3 id=&quot;추상화&quot;&gt;추상화&lt;/h3&gt;

&lt;p&gt;abstract : 정의를 하기 전, 뼈대&lt;/p&gt;

&lt;p&gt;추상메소드&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;abstract 가 붙은 메소드&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상속관계를 가질 때, 자식에서 무조건 재정의를 해야하는 메소드&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;인터페이스, 추상클래스&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;추상메소드를 담을 수 있는 그릇&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;추상클래스 상속은 단일 상속, 인터페이스 구현은 다중 상속 가능&lt;/p&gt;

&lt;p&gt;상속과 구현을 동시에 할 수도 있음&lt;/p&gt;

&lt;p&gt;오버라이딩 되어야하는 메소드가 있으면 자식클래스에서 모두 해줘야함&lt;/p&gt;

&lt;h3 id=&quot;final-keyword&quot;&gt;final keyword&lt;/h3&gt;

&lt;p&gt;변수 : 상수로 만든다&lt;/p&gt;

&lt;p&gt;메소드 : 상속은 가능하지만 오버라이딩 안됨&lt;/p&gt;

&lt;p&gt;클래스 : 상속 불가능&lt;/p&gt;

&lt;h3 id=&quot;-끝-&quot;&gt;======== 끝 ========&lt;/h3&gt;

&lt;h2 id=&quot;23일차-수업-1&quot;&gt;23일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;interface&quot;&gt;interface&lt;/h3&gt;

&lt;p&gt;인터페이스끼리 상속할 때는 extends 키워드 사용&lt;/p&gt;

&lt;p&gt;메소드는 추상 메소드만 가능&lt;/p&gt;

&lt;p&gt;추상클래스, 인터페이스 언제 사용할까?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;추상 클래스는 is 느낌&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인터페이스는 has 느낌&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;인터페이스는 재정의를 필수로 하기 때문에 인터페이스가 많다면 재정의할 메소드가 많아짐&lt;/p&gt;

&lt;p&gt;재정의할 메소드 안에서 중복으로 재정의 하는 메소드도 생김(구현부가 동일한)&lt;/p&gt;

&lt;p&gt;코드의 재사용성을 높이기 위해 default 키워드 등장&lt;/p&gt;

&lt;h3 id=&quot;default-keyword&quot;&gt;default keyword&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// abstract 대신 default를 사용하면 구현부를 작성할 수 있음&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;try-catch&quot;&gt;try catch&lt;/h3&gt;

&lt;p&gt;오류를 컨트롤할 수 있음&lt;/p&gt;

&lt;p&gt;오류가 발생하면 컴퓨터는 강제로 종료를 하지만, 종료를 하지않고 예외처리&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 관찰대상&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 제일먼저 시작하는 코드블럭&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// try 의 코드블럭에서는 오류가 나더라도 예외처리를 할 수 있다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 정상적으로 처리되면 catch 지나가고, 오류가 나면 catch에 정의된 코드에 맞춰서 예외처리&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// try 블록에서 발생한 오류를 예외처리하는 블록&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 예외코드를 인자로 받아들여서 처리&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 다중 작성 가능&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 예외 발생 유무 상관없이 무조건 실행하는 코드&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 생략가능&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Java - Abstract / Interface</title>
      <link href="https://spongebob53.github.io/lecture-abstract_interface" rel="alternate" type="text/html" title="Java - Abstract / Interface" />
      <published>2021-12-14T18:00:00+09:00</published>
      <updated>2021-12-14T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-abstract_interface</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-abstract_interface">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;22일차-수업&quot;&gt;22일차 수업&lt;/h2&gt;

&lt;p&gt;오버라이딩 : 부모의 클래스에 정의된 내용을 재정의&lt;/p&gt;

&lt;p&gt;부모 클래스에는 정의된 내용이 필요가 없어 작성하지 않았다가 재정의하는 것을 잊고 사용하게 되면 문제가 발생(미구현 코드가 실행)&lt;/p&gt;

&lt;p&gt;오버 라이딩을 목적으로 하는 부모클래스, 자식클래스&lt;/p&gt;

&lt;p&gt;추상 클래스 : 무조건 재정의를 해야하는 클래스&lt;/p&gt;

&lt;p&gt;추상 메소드 : 무조건 재정의를 해야하는 메소드&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;틀만 주어짐, 메소드명, 리턴타입, 파라미터 타입 정도만 필수&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;추상-메소드&quot;&gt;추상 메소드&lt;/h3&gt;

&lt;p&gt;선언부만 존재, 구현부는 미존재&lt;/p&gt;

&lt;p&gt;abstract 접근제어자 반환자료형 메소드명 (파라미터);&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;abstract : 추상 메소드, 추상 클래스로 만드는 키워드&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;추상클래스&quot;&gt;추상클래스&lt;/h3&gt;

&lt;p&gt;추상 메소드가 있는 클래스&lt;/p&gt;

&lt;p&gt;추상 메소드가 하나 이상 존재하는 경우에 일반 클래스를 추상클래스로 변환&lt;/p&gt;

&lt;p&gt;추상 클래스를 상속받은 자식 클래스는 반드시 추상 메소드를 구현해야한다&lt;/p&gt;

&lt;p&gt;추상 메소드는 추상 클래스에서 선언한 방식대로 선언&lt;/p&gt;

&lt;p&gt;추상 클래스는 절대 혼자 인스턴스가 되지 못함&lt;/p&gt;

&lt;h3 id=&quot;인터페이스&quot;&gt;인터페이스&lt;/h3&gt;

&lt;p&gt;다중 상속을 하기 위한 장치&lt;/p&gt;

&lt;p&gt;인터페이스를 구현받을 때는 implements 키워드 이용, 여러개 가능, 상속도 동시에 가능&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;class 상속받을 클래스 extends 추상클래스 implements 인터페이스1, 인터페이스2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;클래스는 상속, 인터페이스는 구현이라고 부름&lt;/p&gt;

&lt;p&gt;클래스를 작성할 때의 기본 틀을 제공 / 다른 클래스 간의 중간 매개 역할도 함&lt;/p&gt;

&lt;p&gt;필드와 메소드 앞부분 생략할 수 있게 개발 » 생략된 부분들은 알아서 채워서 선언해줌&lt;/p&gt;

&lt;p&gt;추상 클래스보다 극단적이고 제한적인 성격&lt;/p&gt;

&lt;p&gt;인터페이스 명과 클래스명은 중복이 안됨&lt;/p&gt;

&lt;p&gt;인스턴스 생성 못함&lt;/p&gt;

&lt;p&gt;추상클래스와 인터페이스의 차이점&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;인터페이스는 생성자 선언 불가&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인터페이스는 추상메소드와 상수 선언만 가능&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;접근제어자&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;인터페이스명&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;자료형&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;변수이름&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;값&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;메소드&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;이름&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;파라미터&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;final&quot;&gt;final&lt;/h3&gt;

&lt;p&gt;값을 고정하여 변경하지 못하도록 하는 키워드&lt;/p&gt;

&lt;p&gt;오버라이딩, 상속을 막는 것&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Java - Access Modifier / Extends</title>
      <link href="https://spongebob53.github.io/lecture-access_modifier_extends" rel="alternate" type="text/html" title="Java - Access Modifier / Extends" />
      <published>2021-12-09T18:00:00+09:00</published>
      <updated>2021-12-09T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-access_modifier_extends</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-access_modifier_extends">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;19일차-수업&quot;&gt;19일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;복습&quot;&gt;========복습========&lt;/h3&gt;

&lt;h3 id=&quot;작명-규칙&quot;&gt;작명 규칙&lt;/h3&gt;

&lt;p&gt;camel : 단어와 단어 사이를 대문자로 구분&lt;/p&gt;

&lt;p&gt;snake : 단어와 단어 사이를 _ 로 구분&lt;/p&gt;

&lt;p&gt;class는 대문자로 시작&lt;/p&gt;

&lt;p&gt;variable, method 소문자로 시작 : 다른 사람들이 보고 파악할 수 있도록 작성해 주는 것이 좋음&lt;/p&gt;

&lt;p&gt;프로젝트 팀원이나 회사 규칙에 맞춰서 작성하면 됨&lt;/p&gt;

&lt;h3 id=&quot;overloading&quot;&gt;overloading&lt;/h3&gt;

&lt;p&gt;method, parameter 조건 충족하면 가능&lt;/p&gt;

&lt;p&gt;method의 이름과, parameter(순서 개수 자료형)이 동일해야하고 리턴값과는 무관&lt;/p&gt;

&lt;h3 id=&quot;package&quot;&gt;package&lt;/h3&gt;

&lt;p&gt;클래스를 묶은 집합, 폴더&lt;/p&gt;

&lt;p&gt;기능적으로 비슷하거나 사용이 용이하도록 파일을 관리, 이름 충돌문제 해결&lt;/p&gt;

&lt;p&gt;구분자는 dot(.)&lt;/p&gt;

&lt;p&gt;import&lt;/p&gt;

&lt;p&gt;import를 통해서 패키지 안에 있는 클래스를 현재 클래스에서 사용할 수 있도록 권한 부여&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;import 패키지명.클래스명&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;import 시 이름이 겹치면 클래스명에 직접적으로 패키지를 작성합니다&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-끝-&quot;&gt;======== 끝 ========&lt;/h3&gt;

&lt;h2 id=&quot;19일차-수업-1&quot;&gt;19일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;정보은닉&quot;&gt;정보은닉&lt;/h3&gt;

&lt;p&gt;사용자가 굳이 알 필요없는 정보는 숨기고, 최소한의 정보로만 프로그래밍을 할 수 있어야 한다&lt;/p&gt;

&lt;h3 id=&quot;접근제어자--access-modifier&quot;&gt;접근제어자 : access modifier&lt;/h3&gt;

&lt;p&gt;맨 앞에 선언, 1개만 가능하고 생략 시엔 default로&lt;/p&gt;

&lt;p&gt;private(class) &amp;lt; protected(subclass) &amp;lt; default(package) &amp;lt; public(all)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;private&lt;/p&gt;

    &lt;p&gt;같은 클래스 안에서 사용가능&lt;/p&gt;

    &lt;p&gt;private를 작성한 클래스 내에서 해결을 해야함&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;protected&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;default&lt;/p&gt;

    &lt;p&gt;기본값&lt;/p&gt;

    &lt;p&gt;같은 패키지 안에서 사용가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;public&lt;/p&gt;

    &lt;p&gt;클래스의 접근제어자 중에 최대 허용 범위를 가진 접근제어자&lt;/p&gt;

    &lt;p&gt;default 와 헷갈리지 않게 주의&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;private-변수-접근하기&quot;&gt;private 변수 접근하기&lt;/h3&gt;

&lt;p&gt;외부에서 입력해주고 출력해주는 메소드를 만들어야함&lt;/p&gt;

&lt;p&gt;마우스 우클릭 » Source » generate Getters and Setters 하면 편하게 만들 수 있음&lt;/p&gt;

&lt;p&gt;명명규칙 : get변수명()&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//외부로 반환하는 메소드&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAbc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//	내부로 저장하는 메소드&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setAbc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;abc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;상속&quot;&gt;상속&lt;/h3&gt;

&lt;p&gt;매우 중요!! 313p 참조 객체지향 프로그래밍 필수&lt;/p&gt;

&lt;p&gt;새로운 클래스로 재정의&lt;/p&gt;

&lt;p&gt;상속을 이용하면 기존의 정의된 클래스(부모)의 모든 필드와 메소드를 물려받아&lt;/p&gt;

&lt;p&gt;새로운 클래스(자식)의 재정의 및 추가 생성 가능&lt;/p&gt;

&lt;p&gt;기존의 정의된 클래스 : 부모 , 상위, 기초 클래스&lt;/p&gt;

&lt;p&gt;상속받은 클래스 : 자식, 하위, 파생 클래스&lt;/p&gt;

&lt;h3 id=&quot;extends&quot;&gt;extends&lt;/h3&gt;

&lt;p&gt;상속을 진행하는 키워드&lt;/p&gt;

&lt;p&gt;class 자식 클래스명 extends 부모 클래스명 {—}&lt;/p&gt;

&lt;p&gt;접근제어자가 private, default 로 선언된 변수는 사용 불가능&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;public 혹은 protected&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;자식 클래스의 인스턴스가 생성될 때&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상위클래스의 생성자가 먼저 호출되고, 하위 클래스의 생성자를 호출한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;필드와 파라미터가 중복될 때 this를 사용했던 것처럼, 상위클래스의 필드는 super.로 구분한다&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;static과 별개로 생각해서 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;classarray&quot;&gt;classArray&lt;/h3&gt;

&lt;p&gt;클래스를 이용한 배열&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;클래스의 형태(인스턴스)를 5칸가진배열&lt;/p&gt;

&lt;p&gt;Car[0] : 배열 한 칸에 들어있는 Car 인스턴스&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Java - Overloading / String</title>
      <link href="https://spongebob53.github.io/lecture-overloading_string" rel="alternate" type="text/html" title="Java - Overloading / String" />
      <published>2021-12-08T18:00:00+09:00</published>
      <updated>2021-12-08T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-overloading_string</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-overloading_string">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;18일차-수업&quot;&gt;18일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;복습&quot;&gt;========복습========&lt;/h3&gt;

&lt;h3 id=&quot;생성자&quot;&gt;생성자&lt;/h3&gt;

&lt;p&gt;인스턴스를 만들 때 마지막 단계&lt;/p&gt;

&lt;p&gt;클래스에 정의한 변수 생성되고 그 다음에 생성자 메소드 호출&lt;/p&gt;

&lt;p&gt;호출한 메소드 내의 내용을 하나씩 실행하면서 생성자 메소드를 마무리&lt;/p&gt;

&lt;p&gt;다른 메소드들이랑 다르게 void(반환자료형이 없고, 리턴도 없음)&lt;/p&gt;

&lt;p&gt;생성자가 하나도 없다면 기본 생성자를 시스템이서 만들어주고 생성자가 있다면 기본 생성자를 만들어 주지 않는다&lt;/p&gt;

&lt;p&gt;우리가 정의한 생성자의 모양대로만 new 인스턴스를 할 수 있다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;만약에 생성자에 파라미터가 2개 있는 생성자를 만들었다&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;이 다음 부터는 클래스를 인스턴스화 할 때 무조건 인자를 2개 넣어야한다!&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인자를 넣지 않는 인스턴스는 더 이상 만들지 못함&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;과정&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;인스턴스 만들기(new를 한다) » 생성자 메소드가 1회 호출된다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;모양&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;public 클래스명(){—}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;overriding&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;생성자는 여러 개 만들 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;this&quot;&gt;this&lt;/h3&gt;

&lt;p&gt;메소드 안 지역변수는 메소드가 끝나고 저장되지 않기 때문에 남기고 싶다면 전역변수에 대입을 해줘야함&lt;/p&gt;

&lt;p&gt;지역변수와 전역변수의 이름이 겹치는 상황이 있을 때 this를 이용하여 전역변수와 지역변수를 구분&lt;/p&gt;

&lt;h3 id=&quot;-끝-&quot;&gt;======== 끝 ========&lt;/h3&gt;

&lt;h2 id=&quot;18일차-수업-1&quot;&gt;18일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;이름-규칙&quot;&gt;이름 규칙&lt;/h3&gt;

&lt;p&gt;변수 : 소문자&lt;/p&gt;

&lt;p&gt;메소드 : 소문자&lt;/p&gt;

&lt;p&gt;클래스 : 첫글자 대문자&lt;/p&gt;

&lt;p&gt;가독성을 높이기 위한 방법&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// camel&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;class_name&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//snake&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;정보-은닉&quot;&gt;정보 은닉&lt;/h3&gt;

&lt;p&gt;변수의 메소드를 아무나 볼 수 있는 것이 아니라 사용을 하려는 사람에게만 권한을 주는 것&lt;/p&gt;

&lt;p&gt;패키지, 클래스, 메소드 등&lt;/p&gt;

&lt;h3 id=&quot;접근제어자&quot;&gt;접근제어자&lt;/h3&gt;

&lt;p&gt;public, protected, private, default&lt;/p&gt;

&lt;h3 id=&quot;overloading&quot;&gt;overloading&lt;/h3&gt;

&lt;p&gt;메소드를 중복해서 정의하는 것&lt;/p&gt;

&lt;p&gt;메소드 시그니처&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;메소드를 정의할 때 쓰는 파라미터 요소(리스트)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;메소드 시그니처가 다르면 같은 이름을 가질 수 있음, 반환타입과는 무관&lt;/p&gt;

&lt;h3 id=&quot;timer-깔끔하게-구현해보기&quot;&gt;timer 깔끔하게 구현해보기&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Timer22&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;째깍째깍 현재시간은 &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;시 &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;분&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;초 입니다!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Invalid Value&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Invalid Value&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;윤년&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Invalid Value&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;년은 윤년입니다&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;년은 윤년이 아닙니다&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;string&quot;&gt;String&lt;/h3&gt;

&lt;p&gt;문자열을 담는 자료형&lt;/p&gt;

&lt;p&gt;package java.lang 에 있는 클래스&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//파라미터의 정의가 없는 생성자&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//파라미터의 정의가 있는 생성자&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;안녕&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//자바에서 보편적으로 사용하는 코드이기 때문에 예외적으로 문법을 무시한 케이스&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//배열이라 길이를 구할 수 있음&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//특정 인덱스 번호에 있는 문자를 반환&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//특정 문자열 비교하는 문장 차이나는 개수만큼 출력, 대소문자도 구분&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//문자열을 더하는 메소드, 원본 데이터에 영향 없음&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//문자열에서 문자 검색, 없을 경우 -1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 소문자 변환&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 대문자 변환&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//문자열 자르기 (인자 하나 begin 인자 둘 begin end)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//문자열 분리하기, 인자(분리하는 기준)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//문자열 중에 문자를 str1 =&amp;gt; str2 바꿔버리는 것&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//앞 뒤로 공백을 제거&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//모든 자료형을 문자열로 바꿔줌&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Java - Package</title>
      <link href="https://spongebob53.github.io/lecture-package" rel="alternate" type="text/html" title="Java - Package" />
      <published>2021-12-06T18:00:00+09:00</published>
      <updated>2021-12-06T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-package</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-package">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;16일차-수업&quot;&gt;16일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;복습&quot;&gt;========복습========&lt;/h3&gt;

&lt;h3 id=&quot;변수--제어문--메소드--클래스&quot;&gt;변수 &amp;lt; 제어문 &amp;lt; 메소드 &amp;lt; 클래스&lt;/h3&gt;

&lt;h3 id=&quot;클래스&quot;&gt;클래스&lt;/h3&gt;

&lt;p&gt;필드(변수), 메소드를 통해 하나의 정의서를 작성하면 다른 클래스에서 호출하여 변수와 메소드를 사용할 수 있음&lt;/p&gt;

&lt;p&gt;호출하는 과정 : 인스턴스(new)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;클래스명 인스턴스명 = new 클래스명();&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;new를 각 메소드 마다 사용을 하면 데이터가 꼬일 위험성이 있음&lt;/p&gt;

&lt;p&gt;이를 해결하기 위해 필드와 파라미터를 이용&lt;/p&gt;

&lt;p&gt;인스턴스 내 필드, 메소드를 사용하기 위해서는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스명.변수명&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스명.메소드명()&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;메소드&quot;&gt;메소드&lt;/h3&gt;

&lt;p&gt;필요한 데이터를 전달 : 파라미터와 인자&lt;/p&gt;

&lt;p&gt;메소드 정의하는 법&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;반환 자료형 메소드(파라미터) {…}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;void : 기본형(반환하는 데이터의 자료형이 없을 때)&lt;/p&gt;

&lt;p&gt;반환 데이터가 있을 경우&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;데이터의 자료형을 입력(int String boolean double 등)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;메소드 내에서 return 과 반환값을 입력&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파라미터와 인자는 개수 제한이 없으나, 반환값은 1개&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;클래스도 반환자료형이 가능&lt;/p&gt;

&lt;h3 id=&quot;파라미터&quot;&gt;파라미터&lt;/h3&gt;

&lt;p&gt;현재 메소드를 호출한 메소드로부터 데이터를 받아야할 때 정의하는 값&lt;/p&gt;

&lt;p&gt;메소드를 정의할 때 파라미터를 작성했다면 메소드를 호출할 때도 파라미터에 맞는 데이터를 무조건 작성해야함&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;인자와 파라미터는 순서, 개수, 자료형이 일치해야함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;인스턴스&quot;&gt;인스턴스&lt;/h3&gt;

&lt;p&gt;클래스를 이용하여 인스턴스화(객체화)&lt;/p&gt;

&lt;p&gt;클래스에 정의된 내용을 가진 모양으로 메모리 상에 등록&lt;/p&gt;

&lt;h3 id=&quot;총-복습&quot;&gt;총 복습&lt;/h3&gt;

&lt;p&gt;프로그래밍을 할 때, 처음엔 모든 것을 main method에서 처리 했음&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;가독성도 떨어지고, 하나의 변수값을 변경하면 그에 해당 하는 모든 값이 변경되는 불편함 존재&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;서로 다른 변수끼리 영향 없이 유지되거나, 코드 재사용의 필요성&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;클래스를 이용해서 각각의 인스턴스를 생성함&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;필요한 경우에 따라서 해당 인스턴스만 수정, 변경 등이 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;수정, 변경을 하더라도 다른 인스턴스에 영향이 없게 프로그래밍&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;각각의 프로그램을 부품화(객체지향 프로그래밍)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;이전에는 문제가 나면 모든 소스코드가 오류&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스 이후 오류난 클래스 혹은 메소드만 수정!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but, 공통으로 사용하고 싶은 사례들이 생김&lt;/p&gt;

&lt;p&gt;static&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;정적변수, 모든 클래스가 공통으로 사용하는 고정값&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스와 별개로 클래스에서 바로 사용가능 하도록 만드는 키워드&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;필드와 메소드에 사용 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;static을 사용시 인스턴스를 생성하지 않아도 됨&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-끝-&quot;&gt;======== 끝 ========&lt;/h3&gt;

&lt;h2 id=&quot;16일차-수업-1&quot;&gt;16일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;package&quot;&gt;Package&lt;/h3&gt;

&lt;p&gt;자바에서 말하는 폴더 개념, 클래스와 인터페이스의 집합&lt;/p&gt;

&lt;p&gt;협업하면서 같은 클래스 이름이 충돌할 때, 패키지라는 계층구조로 문제를 해결할 수 있음&lt;/p&gt;

&lt;p&gt;패키지 안에는 패키지를 포함할 수 있고, dot(.)으로 구분한다&lt;/p&gt;

&lt;p&gt;패키지는 모든 자바파일의 첫 줄에 작성&lt;/p&gt;

&lt;p&gt;패키지의 경로가 전체 작성이 되어야함&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;day1206&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;import&quot;&gt;import&lt;/h3&gt;

&lt;p&gt;다른 패키지에 있는 클래스를 현재 클래스에서 사용하기 위한 기능&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;javalang&quot;&gt;Java.lang&lt;/h3&gt;

&lt;p&gt;자바에서는 우리가 자주 사용하는 것들을 좀 더 편하게 사용할 수 있도록 지원&lt;/p&gt;

&lt;p&gt;이 패키지 안에 있는 내용은 자료형, 자주사용하는 값들을 미리 다 생성&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.lang.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//생략된 채로 import 되어있음&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Java - Static / Constructor</title>
      <link href="https://spongebob53.github.io/lecture-static_constructor" rel="alternate" type="text/html" title="Java - Static / Constructor" />
      <published>2021-12-01T18:00:00+09:00</published>
      <updated>2021-12-01T18:00:00+09:00</updated>
      <id>https://spongebob53.github.io/lecture-static_constructor</id>
      <content type="html" xml:base="https://spongebob53.github.io/lecture-static_constructor">&lt;div&gt;이 페이지는 다음에 대한 공부 기록입니다&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;JAVA(자바), Python(파이썬) 기반의&lt;/h3&gt;&lt;/div&gt;

&lt;div&gt;&lt;h3&gt;AI 활용 응용 소프트웨어 개발자 양성 과정&lt;/h3&gt;&lt;/div&gt;

&lt;div style=&quot;margin-bottom: 20px&quot;&gt;2021.11.10. ~ 2022.05.18.&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;찾으시는 정보가 있으시다면&lt;br /&gt;
주제별&lt;a href=&quot;./tag/reference/&quot;&gt;reference&lt;/a&gt;를 이용하시거나&lt;br /&gt;
우측 상단에 있는 검색기능을 이용해주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;15일차-수업&quot;&gt;15일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;복습&quot;&gt;========복습========&lt;/h3&gt;

&lt;h3 id=&quot;메소드&quot;&gt;메소드&lt;/h3&gt;

&lt;p&gt;구조&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;반환자료형 메소드명 (매개변수) { 코드블럭 }&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;반환자료형&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;우리가 알고 있는 자료형 모두 가능&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;void&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;반환자료형이 없다(return이 없거나, return; 가능)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-끝-&quot;&gt;======== 끝 ========&lt;/h3&gt;

&lt;h2 id=&quot;15일차-수업-1&quot;&gt;15일차 수업&lt;/h2&gt;

&lt;h3 id=&quot;스코프&quot;&gt;스코프&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;변수의 범위, {중괄호} 기준으로 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;변수&quot;&gt;변수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;작성 위치에 따라 2가지로 나뉨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;클래스가 기준 시점&lt;/p&gt;

&lt;p&gt;전역변수&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;클래스 밑에 바로 선언되는 변수(필드)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모든 { } 보다 먼저 선언, 모든 메소드에 영향을 미침&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;지역변수&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;메소드 내부에 작성되어 해당 메소드에만 영향을 주는 변수&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;전역변수와 지역변수를 나누는 이유&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;코드의 반복성 o 변수의 재활용 )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;전역변수와 지역변수는 중복이 가능하지만, 지역변수끼리는 중복이 불가능&lt;/p&gt;

&lt;p&gt;전역변수와 지역변수가 중복이 될 때, this로 전역변수 지목 가능&lt;/p&gt;

&lt;h3 id=&quot;static&quot;&gt;static&lt;/h3&gt;

&lt;p&gt;우리가 클래스를 사용하려면 인스턴스화 시켰어야했음&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;정적변수, 고정값, 프로그램이 시작될 때 즉시 생성되는 변수 또는 메소드&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;static 이용시 인스턴스화 과정 거치지않고 호출 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스에 상관없이 값을 클래스에서 바로 사용하고 싶을 때 사용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스에 따라서 값이 변하지 않아야 하는 경우
값의 변경사항을 모든 인스턴스가 공유해야할 때&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Isstatic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Abc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Isstatic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Isstatic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;constructor&quot;&gt;Constructor&lt;/h3&gt;

&lt;p&gt;메소드 형태로 선언되며, 클래스 명이 메소드 명&lt;/p&gt;

&lt;p&gt;반환값 자체가 없는 메소드, void나 return을 작성하지 않음&lt;/p&gt;

&lt;p&gt;중복으로 작성가능, 인스턴스마다 초기값을 다르게 할 수 있음&lt;/p&gt;

&lt;p&gt;생성자는 생략이 가능&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;생략했을 때는 인자가 없는 모양으로 생략되어있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;생략된 생성자가 아닌 다른 조건의 생성자를 만들면 기존 생략된 생성자는 더 이상 기능을 하지 않음&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Cat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;나비&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;회색&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="lecture" />
      

      
        <summary type="html">이 페이지는 다음에 대한 공부 기록입니다 JAVA(자바), Python(파이썬) 기반의 AI 활용 응용 소프트웨어 개발자 양성 과정 2021.11.10. ~ 2022.05.18.</summary>
      

      
      
    </entry>
  
</feed>
