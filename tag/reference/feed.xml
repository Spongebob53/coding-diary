<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="http://localhost:4000/tag/reference/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2022-02-27T23:44:53+09:00</updated>
  <id>http://localhost:4000/tag/reference/feed.xml</id>

  
  
  

  
    <title type="html">Coding Diary | </title>
  

  
    <subtitle>개발 기록</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Reference - Java String</title>
      <link href="http://localhost:4000/reference-java_string" rel="alternate" type="text/html" title="Reference - Java String" />
      <published>2021-12-21T18:00:00+09:00</published>
      <updated>2021-12-21T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-java_string</id>
      <content type="html" xml:base="http://localhost:4000/reference-java_string">&lt;h2 id=&quot;java-math-methods&quot;&gt;Java Math methods&lt;/h2&gt;

&lt;p&gt;methods that allows you to perform mathematical task on numbers&lt;/p&gt;

&lt;p&gt;All methods are static&lt;/p&gt;

&lt;h3 id=&quot;absx&quot;&gt;abs(x)&lt;/h3&gt;

&lt;p&gt;Returns the absolute value of x&lt;/p&gt;

&lt;h3 id=&quot;acosx&quot;&gt;acos(x)&lt;/h3&gt;

&lt;p&gt;Returns the arccosine of x, in a radians&lt;/p&gt;

&lt;h3 id=&quot;asinx&quot;&gt;asin(x)&lt;/h3&gt;

&lt;p&gt;Returns the arcsine of x, in radians&lt;/p&gt;

&lt;h3 id=&quot;atanx&quot;&gt;atan(x)&lt;/h3&gt;

&lt;p&gt;Returns the arctangent of x as a numeric value between –PI/2 and PI/2 radians&lt;/p&gt;

&lt;h3 id=&quot;atan2yx&quot;&gt;atan2(y,x)&lt;/h3&gt;

&lt;p&gt;Returns the angle theta from the conversion of rectangular coordinates(x,y) to polar coordinates(r, theta)&lt;/p&gt;

&lt;h3 id=&quot;cbrtx&quot;&gt;cbrt(x)&lt;/h3&gt;

&lt;p&gt;Returns the cube root of x&lt;/p&gt;

&lt;h3 id=&quot;ceilx&quot;&gt;ceil(x)&lt;/h3&gt;

&lt;p&gt;Returns the value of x rounded up to its nearest integer&lt;/p&gt;

&lt;h3 id=&quot;copysignxy&quot;&gt;copySign(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the first floating point x with the sigtn of the second floating point y&lt;/p&gt;

&lt;h3 id=&quot;cosx&quot;&gt;cos(x)&lt;/h3&gt;

&lt;p&gt;Returns the cosine of x(x is in radians)&lt;/p&gt;

&lt;h3 id=&quot;coshx&quot;&gt;cosh(x)&lt;/h3&gt;

&lt;p&gt;Returns the hyperbolic cosine of a double value&lt;/p&gt;

&lt;h3 id=&quot;expx&quot;&gt;exp(x)&lt;/h3&gt;

&lt;p&gt;Returns the value of E^x&lt;/p&gt;

&lt;h3 id=&quot;expm1x&quot;&gt;expm1(x)&lt;/h3&gt;

&lt;p&gt;Returns e^x-1&lt;/p&gt;

&lt;h3 id=&quot;floorx&quot;&gt;floor(x)&lt;/h3&gt;

&lt;p&gt;Returns the value of x rounded down to its nearest integer&lt;/p&gt;

&lt;h3 id=&quot;getexponentx&quot;&gt;getExponent(x)&lt;/h3&gt;

&lt;p&gt;Returns the unbiased exponent used in x&lt;/p&gt;

&lt;h3 id=&quot;hypotxy&quot;&gt;hypot(x,y)&lt;/h3&gt;

&lt;p&gt;Returns sqrt(x^2+y^2) without intermediate overflow or underflow&lt;/p&gt;

&lt;h3 id=&quot;ieeeremainderxy&quot;&gt;IEEEremainder(x,y)&lt;/h3&gt;

&lt;p&gt;Computes the remainder operation on x and y as prescribed by the IEEE 754 standard&lt;/p&gt;

&lt;h3 id=&quot;logx&quot;&gt;log(x)&lt;/h3&gt;

&lt;p&gt;Returns the natural logarithm (base E) of x&lt;/p&gt;

&lt;h3 id=&quot;log10x&quot;&gt;log10(x)&lt;/h3&gt;

&lt;p&gt;Returns the base 10 logarithm of x&lt;/p&gt;

&lt;h3 id=&quot;log1px&quot;&gt;log1p(x)&lt;/h3&gt;

&lt;p&gt;Returns the natural logarithm (base E) of the sum of x and 1&lt;/p&gt;

&lt;h3 id=&quot;maxxy&quot;&gt;max(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the number with the highest value&lt;/p&gt;

&lt;h3 id=&quot;minxy&quot;&gt;min(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the number with the lowest value&lt;/p&gt;

&lt;h3 id=&quot;nextafterxy&quot;&gt;nextAfter(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the floating point number adjacent to x in the direction of y&lt;/p&gt;

&lt;h3 id=&quot;nextupx&quot;&gt;nextUp(x)&lt;/h3&gt;

&lt;p&gt;Returns the floating point value adjacent to x in the direction of positive infinity&lt;/p&gt;

&lt;h3 id=&quot;powxy&quot;&gt;pow(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the value of x to the power of y&lt;/p&gt;

&lt;h3 id=&quot;random&quot;&gt;random()&lt;/h3&gt;

&lt;p&gt;Returns a random number between 0 and 1&lt;/p&gt;

&lt;h3 id=&quot;roundx&quot;&gt;round(x)&lt;/h3&gt;

&lt;p&gt;Returns the value of x rounded to its nearest integer&lt;/p&gt;

&lt;h3 id=&quot;rint&quot;&gt;rint()&lt;/h3&gt;

&lt;p&gt;Returns the double value that is closest to x and equal to a mathematical integer&lt;/p&gt;

&lt;h3 id=&quot;signumx&quot;&gt;signum(x)&lt;/h3&gt;

&lt;p&gt;Returns the sign of x&lt;/p&gt;

&lt;h3 id=&quot;sinx&quot;&gt;sin(x)&lt;/h3&gt;

&lt;p&gt;Returns the sine of x (x is in radians)&lt;/p&gt;

&lt;h3 id=&quot;sinhx&quot;&gt;sinh(x)&lt;/h3&gt;

&lt;p&gt;Returns the hyperbolic sine of a double value&lt;/p&gt;

&lt;h3 id=&quot;sqrtx&quot;&gt;sqrt(x)&lt;/h3&gt;

&lt;p&gt;Returns the square root of x&lt;/p&gt;

&lt;h3 id=&quot;tanx&quot;&gt;tan(x)&lt;/h3&gt;

&lt;p&gt;Returns the tangent of an angle&lt;/p&gt;

&lt;h3 id=&quot;tanhx&quot;&gt;tanh(x)&lt;/h3&gt;

&lt;p&gt;Returns the hyperbolic tangent of a double value&lt;/p&gt;

&lt;h3 id=&quot;todegreesx&quot;&gt;toDegrees(x)&lt;/h3&gt;

&lt;p&gt;Converts and angle measured in radians to an approx. equivalent angle measured in degrees&lt;/p&gt;

&lt;h3 id=&quot;toradiansx&quot;&gt;toRadians(x)&lt;/h3&gt;

&lt;p&gt;Converts an angle measured in degrees to an approx. angle measured in radians&lt;/p&gt;

&lt;h3 id=&quot;ulpx&quot;&gt;ulp(x)&lt;/h3&gt;

&lt;p&gt;Returns the size of the unit of least precision (ulp) of x&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">Java Math methods</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Reference - Java Math</title>
      <link href="http://localhost:4000/reference-java_math" rel="alternate" type="text/html" title="Reference - Java Math" />
      <published>2021-12-21T18:00:00+09:00</published>
      <updated>2021-12-21T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-java_math</id>
      <content type="html" xml:base="http://localhost:4000/reference-java_math">&lt;h2 id=&quot;java-string-methods&quot;&gt;Java String methods&lt;/h2&gt;

&lt;p&gt;A set of built-in methods that you can use on strings&lt;/p&gt;

&lt;h3 id=&quot;charat&quot;&gt;charAt()&lt;/h3&gt;

&lt;p&gt;Returns the character at the specified index&lt;/p&gt;

&lt;h3 id=&quot;codepointat&quot;&gt;codePointAt()&lt;/h3&gt;

&lt;p&gt;Returns the Unicode of the character at the specified index&lt;/p&gt;

&lt;h3 id=&quot;codepointbefore&quot;&gt;codePointBefore()&lt;/h3&gt;

&lt;p&gt;Returns the Unicode of the character before the specified index&lt;/p&gt;

&lt;h3 id=&quot;codepointcount&quot;&gt;codePointCount()&lt;/h3&gt;

&lt;p&gt;Returns the number of Unicode values found in a string&lt;/p&gt;

&lt;h3 id=&quot;compareto&quot;&gt;compareTo()&lt;/h3&gt;

&lt;p&gt;Compares two strings lexicographically&lt;/p&gt;

&lt;h3 id=&quot;comparetoignorecase&quot;&gt;compareToIgnoreCase()&lt;/h3&gt;

&lt;p&gt;Compares two strings lexicographically, ignoring case differences&lt;/p&gt;

&lt;h3 id=&quot;concat&quot;&gt;concat()&lt;/h3&gt;

&lt;p&gt;Appends a string to the end of another string&lt;/p&gt;

&lt;h3 id=&quot;contains&quot;&gt;contains()&lt;/h3&gt;

&lt;p&gt;Checks whether a string contains a sequence of chracters&lt;/p&gt;

&lt;h3 id=&quot;contentequals&quot;&gt;contentEquals()&lt;/h3&gt;

&lt;p&gt;Checks whether a string contains the exact same sequence of characters of the specified CharSequence or StringBuffer&lt;/p&gt;

&lt;h3 id=&quot;copyvalueof&quot;&gt;copyValueOf()&lt;/h3&gt;

&lt;p&gt;Returns a String that represents the characters of the character array&lt;/p&gt;

&lt;h3 id=&quot;endswith&quot;&gt;endsWith()&lt;/h3&gt;

&lt;p&gt;Checks whether a string ends with the specified character(s)&lt;/p&gt;

&lt;h3 id=&quot;equals&quot;&gt;equals()&lt;/h3&gt;

&lt;p&gt;Compares two strings&lt;/p&gt;

&lt;h3 id=&quot;equalsignorecase&quot;&gt;equalsIgnoreCase()&lt;/h3&gt;

&lt;p&gt;Compares two strings, ignoring case considerations&lt;/p&gt;

&lt;h3 id=&quot;format&quot;&gt;format()&lt;/h3&gt;

&lt;p&gt;Returns a formatted string using the specified locale, format string and arguments&lt;/p&gt;

&lt;h3 id=&quot;getbytes&quot;&gt;getBytes()&lt;/h3&gt;

&lt;p&gt;Encodes this String into a sequence of bytes using the named charset, storing the result into a new byte array&lt;/p&gt;

&lt;h3 id=&quot;getchars&quot;&gt;getChars()&lt;/h3&gt;

&lt;p&gt;Copies characters from a string to an array of chars&lt;/p&gt;

&lt;h3 id=&quot;hashcode&quot;&gt;hashCode()&lt;/h3&gt;

&lt;p&gt;Returns the hash code of a string&lt;/p&gt;

&lt;h3 id=&quot;indexof&quot;&gt;indexOf()&lt;/h3&gt;

&lt;p&gt;Returns the position of the first found occurrence of specified characters in a string&lt;/p&gt;

&lt;h3 id=&quot;intern&quot;&gt;intern()&lt;/h3&gt;

&lt;p&gt;Returns the canonical representation for the string object&lt;/p&gt;

&lt;h3 id=&quot;isempty&quot;&gt;isEmpty()&lt;/h3&gt;

&lt;p&gt;Checks whether a string is empty or not&lt;/p&gt;

&lt;h3 id=&quot;lastindexof&quot;&gt;lastIndexOf()&lt;/h3&gt;

&lt;p&gt;Returns the position of the last found occurrence of specified characters in a string&lt;/p&gt;

&lt;h3 id=&quot;length&quot;&gt;length()&lt;/h3&gt;

&lt;p&gt;Returns the length of a specified string&lt;/p&gt;

&lt;h3 id=&quot;matches&quot;&gt;matches()&lt;/h3&gt;

&lt;p&gt;Searches a string for a match against a regular expression, and returns the matches&lt;/p&gt;

&lt;h3 id=&quot;offsetbycodepoints&quot;&gt;offsetbyCodePoints()&lt;/h3&gt;

&lt;p&gt;Returns the index within this String that is offset from the given index by codePointOffset code points&lt;/p&gt;

&lt;h3 id=&quot;regionmatches&quot;&gt;regionMatches()&lt;/h3&gt;

&lt;p&gt;Tests if two string regions are equal&lt;/p&gt;

&lt;h3 id=&quot;replace&quot;&gt;replace()&lt;/h3&gt;

&lt;p&gt;Searches a string for a specified value, and returns a new string where the specified values are replaced&lt;/p&gt;

&lt;h3 id=&quot;replacefirst&quot;&gt;replaceFirst()&lt;/h3&gt;

&lt;p&gt;Replaces the first occurrence of a substring that matches the given regular expression with the given replacement&lt;/p&gt;

&lt;h3 id=&quot;replaceall&quot;&gt;replaceAll()&lt;/h3&gt;

&lt;p&gt;Replaces each substring of this string that matches the given regular expression with the given replacement&lt;/p&gt;

&lt;h3 id=&quot;split&quot;&gt;split()&lt;/h3&gt;

&lt;p&gt;Splits a string into an array of substrings&lt;/p&gt;

&lt;h3 id=&quot;startswith&quot;&gt;startsWith()&lt;/h3&gt;

&lt;p&gt;Check whether a string starts with specified characters&lt;/p&gt;

&lt;h3 id=&quot;subsequence&quot;&gt;subSequence()&lt;/h3&gt;

&lt;p&gt;Returns a new character sequence that is a subsequence of this sequence&lt;/p&gt;

&lt;h3 id=&quot;substring&quot;&gt;substring()&lt;/h3&gt;

&lt;p&gt;Returns a new string which is the substring of a specified string&lt;/p&gt;

&lt;h3 id=&quot;tochararray&quot;&gt;toCharArray()&lt;/h3&gt;

&lt;p&gt;Convert this string to a new characer array&lt;/p&gt;

&lt;h3 id=&quot;tolowercase&quot;&gt;toLowerCase()&lt;/h3&gt;

&lt;p&gt;Converts a string to lower case letters&lt;/p&gt;

&lt;h3 id=&quot;tostring&quot;&gt;toString()&lt;/h3&gt;

&lt;p&gt;Returns the value of a String object&lt;/p&gt;

&lt;h3 id=&quot;touppercase&quot;&gt;toUpperCase()&lt;/h3&gt;

&lt;p&gt;Converts a string to upper case letters&lt;/p&gt;

&lt;h3 id=&quot;trim&quot;&gt;trim()&lt;/h3&gt;

&lt;p&gt;Removes whitespace from both ends of a string&lt;/p&gt;

&lt;h3 id=&quot;valueof&quot;&gt;valueOf()&lt;/h3&gt;

&lt;p&gt;Returns the string representation of the specified value&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">Java String methods</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Reference - Java Keyword</title>
      <link href="http://localhost:4000/reference-java_keyword" rel="alternate" type="text/html" title="Reference - Java Keyword" />
      <published>2021-12-19T18:00:00+09:00</published>
      <updated>2021-12-19T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-java_keyword</id>
      <content type="html" xml:base="http://localhost:4000/reference-java_keyword">&lt;h2 id=&quot;java-reserved-keywords&quot;&gt;Java reserved keywords&lt;/h2&gt;

&lt;h3 id=&quot;abstract&quot;&gt;abstract&lt;/h3&gt;

&lt;p&gt;A non-access modifier.&lt;/p&gt;

&lt;p&gt;Used for classes and methods&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;An abstract class cannot be used to create objects (to access it, it must be inherited from another class)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;An abstract method can only be used in an abstract class(it does not have a body, the body is provided by the subclass)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-abstract_interface&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-abstraction&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;assert&quot;&gt;assert&lt;/h3&gt;

&lt;p&gt;For debugging&lt;/p&gt;

&lt;h3 id=&quot;boolean&quot;&gt;boolean&lt;/h3&gt;

&lt;p&gt;A data type that can only store true and false values&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-operator&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;break&quot;&gt;break&lt;/h3&gt;

&lt;p&gt;breaks out of a loop or a switch block&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;byte&quot;&gt;byte&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from –128 and 127&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;case&quot;&gt;case&lt;/h3&gt;

&lt;p&gt;Marks a block of code in switch statements&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;catch&quot;&gt;catch&lt;/h3&gt;

&lt;p&gt;Catches exceptions generated by try statements&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-exception&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;char&quot;&gt;char&lt;/h3&gt;

&lt;p&gt;A data type that is used to store a single character&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-variable&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;class&quot;&gt;class&lt;/h3&gt;

&lt;p&gt;Defines a class&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-class&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-class_static&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;continue&quot;&gt;continue&lt;/h3&gt;

&lt;p&gt;Continues to the next iteration of a loop&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;default&quot;&gt;default&lt;/h3&gt;

&lt;p&gt;Specifies the default block of code in a switch statement&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;do&quot;&gt;do&lt;/h3&gt;

&lt;p&gt;Used together with while to create a do-while loop&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;double&quot;&gt;double&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from 1.7e-308 to 1.7e+308&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;else&quot;&gt;else&lt;/h3&gt;

&lt;p&gt;Used in conditional statements&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;enum&quot;&gt;enum&lt;/h3&gt;

&lt;p&gt;Declares an enumerated(unchangeable) type&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-enum&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;exports&quot;&gt;exports&lt;/h3&gt;

&lt;p&gt;Exports a package with a module&lt;/p&gt;

&lt;h3 id=&quot;extends&quot;&gt;extends&lt;/h3&gt;

&lt;p&gt;Extends a class(indicates that a class is inherited from another class)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-inheritance&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;final&quot;&gt;final&lt;/h3&gt;

&lt;p&gt;A non-access modifier, makes non-changeable(impossible to inherit or override)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-abstract_interface&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-variable&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;finally&quot;&gt;finally&lt;/h3&gt;

&lt;p&gt;Used with exceptions, a block of code that will be executed no matter if there is an exception or not&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-exception&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;float&quot;&gt;float&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers form 3.4e-038 to 3.4e+038&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;for&quot;&gt;for&lt;/h3&gt;

&lt;p&gt;Create a for loop&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-loop&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;if&quot;&gt;if&lt;/h3&gt;

&lt;p&gt;Makes a conditional statement&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;implements&quot;&gt;implements&lt;/h3&gt;

&lt;p&gt;Implements an interface&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-interface_trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-abstraction&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;import&quot;&gt;import&lt;/h3&gt;

&lt;p&gt;Used to import a package, class or interface&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-package&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-package&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;instanceof&quot;&gt;instanceof&lt;/h3&gt;

&lt;p&gt;Check whether an object is an instance of a specific class or an interface&lt;/p&gt;

&lt;h3 id=&quot;int&quot;&gt;int&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from –2147483648 to 2147483647&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;interface&quot;&gt;interface&lt;/h3&gt;

&lt;p&gt;Used to declare a special type of class that only contains abstract methods&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-interface_trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-abstraction&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;long&quot;&gt;long&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from –9223372036854775808 to 9223372036854775808&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;module&quot;&gt;module&lt;/h3&gt;

&lt;p&gt;Declares a module&lt;/p&gt;

&lt;h3 id=&quot;native&quot;&gt;native&lt;/h3&gt;

&lt;p&gt;Specifies that a method is not implemented in the same Java source file(but in another language)&lt;/p&gt;

&lt;h3 id=&quot;new&quot;&gt;new&lt;/h3&gt;

&lt;p&gt;Creates new objects&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-class&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-class_static&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;package&quot;&gt;package&lt;/h3&gt;

&lt;p&gt;Declares a package&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-package&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-package&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;private&quot;&gt;private&lt;/h3&gt;

&lt;p&gt;An access modifier, making accessible within the declared class(so class can’t use)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-modifier&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;protected&quot;&gt;protected&lt;/h3&gt;

&lt;p&gt;An access modifier, making accessible in the same package and subclasses(so class can’t use)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-modifier&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;public&quot;&gt;public&lt;/h3&gt;

&lt;p&gt;An access modifier, making accessible by any other class&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-modifier&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;requires&quot;&gt;requires&lt;/h3&gt;

&lt;p&gt;Specifies required libraries inside a module&lt;/p&gt;

&lt;h3 id=&quot;return&quot;&gt;return&lt;/h3&gt;

&lt;p&gt;Finished the execution of a method, and can be used to return a value from a method&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-return&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-method&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;short&quot;&gt;short&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from –32768 to 32767&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;static&quot;&gt;static&lt;/h3&gt;

&lt;p&gt;A non-access modifier used for method and attributes&lt;/p&gt;

&lt;p&gt;It can be accessed without creating an object of a class&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-static_constructor&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-class_static&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;strictfp&quot;&gt;strictfp&lt;/h3&gt;

&lt;p&gt;Restrict the precision and rounding of floating point calculations&lt;/p&gt;

&lt;h3 id=&quot;super&quot;&gt;super&lt;/h3&gt;

&lt;p&gt;Refers to superclass(parent) objects&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;switch&quot;&gt;switch&lt;/h3&gt;

&lt;p&gt;Selects one of many code blocks to be executed&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;synchronized&quot;&gt;synchronized&lt;/h3&gt;

&lt;p&gt;A non-access modifier, which specifies that methods can only be accessed by one thread at a time&lt;/p&gt;

&lt;h3 id=&quot;this&quot;&gt;this&lt;/h3&gt;

&lt;p&gt;Refers to the current object in a method or constructor&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;throw&quot;&gt;throw&lt;/h3&gt;

&lt;p&gt;Creates a custom error&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;throws&quot;&gt;throws&lt;/h3&gt;

&lt;p&gt;Indicates what exceptions may be thrown by a method&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-exception&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;transient&quot;&gt;transient&lt;/h3&gt;

&lt;p&gt;A non-access modifier, which specifies that an attribute is not part of an object’s persistent state&lt;/p&gt;

&lt;h3 id=&quot;try&quot;&gt;try&lt;/h3&gt;

&lt;p&gt;Creates a try…catch statement&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-throws&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-exception&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;var&quot;&gt;var&lt;/h3&gt;

&lt;p&gt;Declares a variable&lt;/p&gt;

&lt;h3 id=&quot;void&quot;&gt;void&lt;/h3&gt;

&lt;p&gt;Specifies that a method should not have a return value&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-return&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-method&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;volatile&quot;&gt;volatile&lt;/h3&gt;

&lt;p&gt;Indicates that an attribute is not cached thread-locally&lt;/p&gt;

&lt;p&gt;Is always read from the “main memory”&lt;/p&gt;

&lt;h3 id=&quot;while&quot;&gt;while&lt;/h3&gt;

&lt;p&gt;Creates a while loop&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-loop&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">Java reserved keywords</summary>
      

      
      
    </entry>
  
</feed>
