<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="http://localhost:4000/tag/reference/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2022-03-07T23:41:38+09:00</updated>
  <id>http://localhost:4000/tag/reference/feed.xml</id>

  
  
  

  
    <title type="html">Coding Diary | </title>
  

  
    <subtitle>개발 기록</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Reference - Python String method</title>
      <link href="http://localhost:4000/reference-python_string-method" rel="alternate" type="text/html" title="Reference - Python String method" />
      <published>2022-03-05T18:00:00+09:00</published>
      <updated>2022-03-05T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-python_string-method</id>
      <content type="html" xml:base="http://localhost:4000/reference-python_string-method">&lt;h2 id=&quot;string-method&quot;&gt;String method&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;capitalize()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts the first character to upper case&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;casefold()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts string into lower case, Unicode text/user input&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;center()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a centered string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;count()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the number of times a specified value occurs in a string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;encode()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns an encoded version of the string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;endswith()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns true if the string ends with the specified value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;expandtabs()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Sets the tab size of the string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;find()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Searches the string for a specified value&lt;br /&gt;and returns the position of where it was found,&lt;br /&gt;if str is not found, raises an exception&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;format()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Formats specified values in a string, use primitive&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;format_map()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Formats specified values in a string, use dict&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;index()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Searches the string for a specified value&lt;br /&gt;and returns the position of where it was found,&lt;br /&gt;if str is not found, it returns -1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isalnum()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all characters in the string are alphanumeric&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isalpha()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all characters in the string are in the alphabet&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isascii()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all characters in the string are ascii characters&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isdecimal()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all characters in the string are decimals&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isdigit()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all characters in the string are digits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isidentifier()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if the string is an identifier&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;islower()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all character in the string are lower case&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isnumeric()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all characters in the string are numeric&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isprintable()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all characters in the string are printable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isspace()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all characters in the string are whitespaces&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;istitle()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if the string follows the rules of a title&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isupper()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Retunrs True if all characters in the string are upper case&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;join&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts the elements of an iterable into a string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ljust()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a left justified version of the string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;lower()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts a string into lower case, Purely ASCII text&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;lstrip()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a left trim version of the string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;maketrans()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a translation table to be used in translations&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;partition()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a tuple where the string is parted into three parts&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;replace()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a string where a specified value is replaced with a specified value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rfind()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Searches the string for a specified value&lt;br /&gt;and returns the last position of where it was found&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rindex()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Searches the string for a specified value&lt;br /&gt;and returns the last position of where it was found&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rjust()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a right justified version of the string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rpartition()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a tuple where the string is parted into three parts&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rsplit()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Splits the string at the specified separator, and returns a list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rstrip()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a right trim version of the string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;split()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Splits the string at the specified separator, and returns a list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;splitlines()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Splits the string at line breaks and returns a list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;startwith()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns true if the string starts with the specified value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;strip()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a trimmed version of the string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;swapcase()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Swaps cases, lower case becomes upper case and vice versa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;title()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts the first character of each word to upper case&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;translate()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a translated string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;upper()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts a string into upper case&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;zfill()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Fills the string with a specified number of 0 values at the beginning&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">String method</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Reference - Python Keyword</title>
      <link href="http://localhost:4000/reference-python_keyword" rel="alternate" type="text/html" title="Reference - Python Keyword" />
      <published>2022-03-05T18:00:00+09:00</published>
      <updated>2022-03-05T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-python_keyword</id>
      <content type="html" xml:base="http://localhost:4000/reference-python_keyword">&lt;h2 id=&quot;python-keywords&quot;&gt;Python keywords&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Keyword&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;and&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A logical operator&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;as&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To create an alias&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;assert&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;For debugging&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;break&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To break out of a loop&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;class&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To defines a class&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;continue&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To continue to the next iteration of a loop&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;def&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To define a function&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;del&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To delete an object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;elif&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Used in conditional statements, same as else if&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;else&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Used in conditional statements&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;except&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Used with exceptions, what to do when an exception occurs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;False&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Boolean value, result of comparison operations&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;finally&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Used with exceptions,&lt;br /&gt; a block of code that will be executed no matter &lt;br /&gt;if there is an exception or not&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;for&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To create a for loop&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;from&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To import specific parts of a module&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;global&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To declare a global variable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;if&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To make a conditional statement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;import&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To import a module&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;in&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To check if a value is present in a list, tuple, etc.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;is&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To test if two variables are equal&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;lambda&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To create an anonymous function&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;None&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Represents a null value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;nonlocal&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To declare a non-local variable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;not&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A logical operator&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;or&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A logical operator&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;pass&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A null statement, a statement that will do nothing&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;raise&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To raise an exception&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;return&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To exit a function and return a value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;True&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Boolean value, result of comparison operations&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;try&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To make a try..except statement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;while&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To create a while loop&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;with&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Used to simplify exception handling&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yield&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To end a function, returns a generator&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">Python keywords</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Reference - Python Function</title>
      <link href="http://localhost:4000/reference-python_function" rel="alternate" type="text/html" title="Reference - Python Function" />
      <published>2022-03-05T18:00:00+09:00</published>
      <updated>2022-03-05T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-python_function</id>
      <content type="html" xml:base="http://localhost:4000/reference-python_function">&lt;h2 id=&quot;python-built-in-function&quot;&gt;Python Built-in Function&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Function&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;abs()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the absolute value of a number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;all()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if all items in an iterable object are true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;any()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if any item in an iterable object is true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ascii()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a readable version of an object.&lt;br /&gt;Replaces none-ascii characters with escape character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bin()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the binary version of a number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bool()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the Boolean value of the specified object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bytearray()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns an array of bytes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bytes()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a bytes object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;callable()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if the specified object is callable, otherwise False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;chr()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a character from the specified Unicode code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;classmethod()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts a method into a class method&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;compile()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the specified source as an object, ready to be executed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;complex()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a complex number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;delattr()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Deltes the specified attribute(property of method) from the specified object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;dict()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a dictionary(Array)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;dir()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a list of the specified object’s properties and methods&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;divmod()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the quotient and the remainder when argument1 is divided by argument2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;enumerate()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Takes a collection (like tuple) and returns it as an enumerate object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;eval()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Evaluates and executes an expression&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;exec()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Executes the specified code(or object)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;filter()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Use a filter function to exclude items in an iterable object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;float()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a floating point number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;format()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Formats a specified value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;frozenset()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a frozenset object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;getattr()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the value of the specified attributes(property or method)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;globals()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the current global symbol table as a dictionary&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;hasattr()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if the specified object has the specified attribute(property/method)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;hash()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the hash value of a specified object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;help()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Executes the built-in help system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;hex()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts a number into a hexadecimal value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;id()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the id of an object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;input()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Allowing user input&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns an integer number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isinstance()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if a specified object is an instance of a specified object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;issubclass()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns True if a specified class is a subclass of a specified object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;iter()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns an iterator object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;len()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the length of an object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;list()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;locals()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns an updated dictionary of the current local symbol table&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;map()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the specified iterator with the specified function applied to each item&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the largest item in an iterable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;memoryview()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a memory view object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;min()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the smallest item in an iterable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;next()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the next item in an iterable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;object()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a new object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;oct()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts a number into an octal&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;open()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Opens a file and returns a file object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ord()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Convert an integer representing the Unicode of the specified character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;pow()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the value of x to the power of y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;print()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Prints to the standard output device&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;property()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Gets, sets, deletes a property&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;range()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a sequence of numbers, starting from 0 and increments by 1 (by default)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;repr()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a readable version of an object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;reversed()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a reverse iterator&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;round()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Rounds a numbers&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;set()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a new set object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;setattr()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Sets an attribute (property/method) of an object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;slice()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a slice object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sorted()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a sorted list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;staticmethod()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Converts a method into a static method&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;str()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a string object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sum()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Sums the items of an iterator&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;super()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns an object that represents the parent class&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;tuple()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a tuple&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;type()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the type of an object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;vars()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__dict__&lt;/code&gt; property of an object&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;zip()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns an iterator, from two or more iterators&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">Python Built-in Function</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Reference - Python File method</title>
      <link href="http://localhost:4000/reference-python_file-method" rel="alternate" type="text/html" title="Reference - Python File method" />
      <published>2022-03-05T18:00:00+09:00</published>
      <updated>2022-03-05T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-python_file-method</id>
      <content type="html" xml:base="http://localhost:4000/reference-python_file-method">&lt;h2 id=&quot;file-method&quot;&gt;File method&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;close()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Closes the file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;detach()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the separated raw stream from the buffer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;fileno()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Retuns a number that represents the stream, &lt;br /&gt;from the operating system’s perspective&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;flush()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Flushes the internal buffer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isatty()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns whether the file stream is interactive or not&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;read()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the file content&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;readable()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns whether the file stream can be read or not&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;readline()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns one line from the file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;readlines()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a list of lines from the file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;seek()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Change the file position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;seekable()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns whether the file allows us to change the file position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;tell()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the current file position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;truncate()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Resizes the file to a specified size&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;writable()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns whether the file can be written to or not&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;write()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Writes the specified string to the file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;writeslines()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Writes a list of strings to the file&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">File method</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Reference - Python Collection method</title>
      <link href="http://localhost:4000/reference-python_collection-method" rel="alternate" type="text/html" title="Reference - Python Collection method" />
      <published>2022-03-05T18:00:00+09:00</published>
      <updated>2022-03-05T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-python_collection-method</id>
      <content type="html" xml:base="http://localhost:4000/reference-python_collection-method">&lt;h2 id=&quot;list-method&quot;&gt;List method&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;append()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Adds an element at the end of the list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;clear()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes all the elements from the list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;copy()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a copy of the list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;count()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the number of elements with the specified value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;extend()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Add the elements of a list(or any iterable),&lt;br /&gt;to the end of the current list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;index()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the index of the first element with the specified value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;insert()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Adds an element at the specified position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;pop()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes the element at the specified position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;remove()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes the first item with the specified value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;reverse()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Reverse the order of the list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sort()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Sorts the list&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;dictionary-method&quot;&gt;Dictionary method&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;clear()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes all the elements from the dictionary&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;copy()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a copy of the dictionary&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;fromkeys()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a dictionary with the specified keys and value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;get()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the value of the specified key&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;items()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a list containing a tuple for each key value pair&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;keys()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a list containing the dictionary’s keys&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;pop()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes the element with the specified key&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;popitem()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes the last inserted key-value pair&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;setdefault()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the value of the specified key.&lt;br /&gt;If the key doesn’y exist : insert the key, with the specified value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;update()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Updates the dictionary with the specified key-value pairs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;values()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a list of all the values in the dictionary&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;tuple-method&quot;&gt;Tuple method&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;count()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns the number of times a specified value occurs in a tuple&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;index()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Searches the tuple for a specified value and returns the position of where it was found&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;set-method&quot;&gt;Set method&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;add()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Adds an element to the set&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;clear()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes all the elements from the set&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;copy()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a copy of the set&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;difference()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a set containing the difference between two or more sets&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;difference_update()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes the items in this set that are also included in another,specified set&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;discard()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Remove the specified item&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;intersection()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a set, that is the intersection of two or more sets&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;intersection_update()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes the items in this set that are not present in other specified set(s)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;indisjoint()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns whether two sets have a intersection or not&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;issubset()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns whether another set contains this set or not&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;pop()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes an element from the set&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;remove()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Removes the specified element&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;symmetric_difference()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a set with the symmetric difference of two sets&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;symmetric_difference_update()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;inserts the symmetric differences from this set and another&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;union()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Returns a set containing the union of sets&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;update()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Update the set with another set, or any other iterable&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">List method</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Reference - Java String</title>
      <link href="http://localhost:4000/reference-java_string" rel="alternate" type="text/html" title="Reference - Java String" />
      <published>2021-12-21T18:00:00+09:00</published>
      <updated>2021-12-21T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-java_string</id>
      <content type="html" xml:base="http://localhost:4000/reference-java_string">&lt;h2 id=&quot;java-math-methods&quot;&gt;Java Math methods&lt;/h2&gt;

&lt;p&gt;methods that allows you to perform mathematical task on numbers&lt;/p&gt;

&lt;p&gt;All methods are static&lt;/p&gt;

&lt;h3 id=&quot;absx&quot;&gt;abs(x)&lt;/h3&gt;

&lt;p&gt;Returns the absolute value of x&lt;/p&gt;

&lt;h3 id=&quot;acosx&quot;&gt;acos(x)&lt;/h3&gt;

&lt;p&gt;Returns the arccosine of x, in a radians&lt;/p&gt;

&lt;h3 id=&quot;asinx&quot;&gt;asin(x)&lt;/h3&gt;

&lt;p&gt;Returns the arcsine of x, in radians&lt;/p&gt;

&lt;h3 id=&quot;atanx&quot;&gt;atan(x)&lt;/h3&gt;

&lt;p&gt;Returns the arctangent of x as a numeric value between –PI/2 and PI/2 radians&lt;/p&gt;

&lt;h3 id=&quot;atan2yx&quot;&gt;atan2(y,x)&lt;/h3&gt;

&lt;p&gt;Returns the angle theta from the conversion of rectangular coordinates(x,y) to polar coordinates(r, theta)&lt;/p&gt;

&lt;h3 id=&quot;cbrtx&quot;&gt;cbrt(x)&lt;/h3&gt;

&lt;p&gt;Returns the cube root of x&lt;/p&gt;

&lt;h3 id=&quot;ceilx&quot;&gt;ceil(x)&lt;/h3&gt;

&lt;p&gt;Returns the value of x rounded up to its nearest integer&lt;/p&gt;

&lt;h3 id=&quot;copysignxy&quot;&gt;copySign(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the first floating point x with the sigtn of the second floating point y&lt;/p&gt;

&lt;h3 id=&quot;cosx&quot;&gt;cos(x)&lt;/h3&gt;

&lt;p&gt;Returns the cosine of x(x is in radians)&lt;/p&gt;

&lt;h3 id=&quot;coshx&quot;&gt;cosh(x)&lt;/h3&gt;

&lt;p&gt;Returns the hyperbolic cosine of a double value&lt;/p&gt;

&lt;h3 id=&quot;expx&quot;&gt;exp(x)&lt;/h3&gt;

&lt;p&gt;Returns the value of E^x&lt;/p&gt;

&lt;h3 id=&quot;expm1x&quot;&gt;expm1(x)&lt;/h3&gt;

&lt;p&gt;Returns e^x-1&lt;/p&gt;

&lt;h3 id=&quot;floorx&quot;&gt;floor(x)&lt;/h3&gt;

&lt;p&gt;Returns the value of x rounded down to its nearest integer&lt;/p&gt;

&lt;h3 id=&quot;getexponentx&quot;&gt;getExponent(x)&lt;/h3&gt;

&lt;p&gt;Returns the unbiased exponent used in x&lt;/p&gt;

&lt;h3 id=&quot;hypotxy&quot;&gt;hypot(x,y)&lt;/h3&gt;

&lt;p&gt;Returns sqrt(x^2+y^2) without intermediate overflow or underflow&lt;/p&gt;

&lt;h3 id=&quot;ieeeremainderxy&quot;&gt;IEEEremainder(x,y)&lt;/h3&gt;

&lt;p&gt;Computes the remainder operation on x and y as prescribed by the IEEE 754 standard&lt;/p&gt;

&lt;h3 id=&quot;logx&quot;&gt;log(x)&lt;/h3&gt;

&lt;p&gt;Returns the natural logarithm (base E) of x&lt;/p&gt;

&lt;h3 id=&quot;log10x&quot;&gt;log10(x)&lt;/h3&gt;

&lt;p&gt;Returns the base 10 logarithm of x&lt;/p&gt;

&lt;h3 id=&quot;log1px&quot;&gt;log1p(x)&lt;/h3&gt;

&lt;p&gt;Returns the natural logarithm (base E) of the sum of x and 1&lt;/p&gt;

&lt;h3 id=&quot;maxxy&quot;&gt;max(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the number with the highest value&lt;/p&gt;

&lt;h3 id=&quot;minxy&quot;&gt;min(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the number with the lowest value&lt;/p&gt;

&lt;h3 id=&quot;nextafterxy&quot;&gt;nextAfter(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the floating point number adjacent to x in the direction of y&lt;/p&gt;

&lt;h3 id=&quot;nextupx&quot;&gt;nextUp(x)&lt;/h3&gt;

&lt;p&gt;Returns the floating point value adjacent to x in the direction of positive infinity&lt;/p&gt;

&lt;h3 id=&quot;powxy&quot;&gt;pow(x,y)&lt;/h3&gt;

&lt;p&gt;Returns the value of x to the power of y&lt;/p&gt;

&lt;h3 id=&quot;random&quot;&gt;random()&lt;/h3&gt;

&lt;p&gt;Returns a random number between 0 and 1&lt;/p&gt;

&lt;h3 id=&quot;roundx&quot;&gt;round(x)&lt;/h3&gt;

&lt;p&gt;Returns the value of x rounded to its nearest integer&lt;/p&gt;

&lt;h3 id=&quot;rint&quot;&gt;rint()&lt;/h3&gt;

&lt;p&gt;Returns the double value that is closest to x and equal to a mathematical integer&lt;/p&gt;

&lt;h3 id=&quot;signumx&quot;&gt;signum(x)&lt;/h3&gt;

&lt;p&gt;Returns the sign of x&lt;/p&gt;

&lt;h3 id=&quot;sinx&quot;&gt;sin(x)&lt;/h3&gt;

&lt;p&gt;Returns the sine of x (x is in radians)&lt;/p&gt;

&lt;h3 id=&quot;sinhx&quot;&gt;sinh(x)&lt;/h3&gt;

&lt;p&gt;Returns the hyperbolic sine of a double value&lt;/p&gt;

&lt;h3 id=&quot;sqrtx&quot;&gt;sqrt(x)&lt;/h3&gt;

&lt;p&gt;Returns the square root of x&lt;/p&gt;

&lt;h3 id=&quot;tanx&quot;&gt;tan(x)&lt;/h3&gt;

&lt;p&gt;Returns the tangent of an angle&lt;/p&gt;

&lt;h3 id=&quot;tanhx&quot;&gt;tanh(x)&lt;/h3&gt;

&lt;p&gt;Returns the hyperbolic tangent of a double value&lt;/p&gt;

&lt;h3 id=&quot;todegreesx&quot;&gt;toDegrees(x)&lt;/h3&gt;

&lt;p&gt;Converts and angle measured in radians to an approx. equivalent angle measured in degrees&lt;/p&gt;

&lt;h3 id=&quot;toradiansx&quot;&gt;toRadians(x)&lt;/h3&gt;

&lt;p&gt;Converts an angle measured in degrees to an approx. angle measured in radians&lt;/p&gt;

&lt;h3 id=&quot;ulpx&quot;&gt;ulp(x)&lt;/h3&gt;

&lt;p&gt;Returns the size of the unit of least precision (ulp) of x&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">Java Math methods</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Reference - Java Math</title>
      <link href="http://localhost:4000/reference-java_math" rel="alternate" type="text/html" title="Reference - Java Math" />
      <published>2021-12-21T18:00:00+09:00</published>
      <updated>2021-12-21T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-java_math</id>
      <content type="html" xml:base="http://localhost:4000/reference-java_math">&lt;h2 id=&quot;java-string-methods&quot;&gt;Java String methods&lt;/h2&gt;

&lt;p&gt;A set of built-in methods that you can use on strings&lt;/p&gt;

&lt;h3 id=&quot;charat&quot;&gt;charAt()&lt;/h3&gt;

&lt;p&gt;Returns the character at the specified index&lt;/p&gt;

&lt;h3 id=&quot;codepointat&quot;&gt;codePointAt()&lt;/h3&gt;

&lt;p&gt;Returns the Unicode of the character at the specified index&lt;/p&gt;

&lt;h3 id=&quot;codepointbefore&quot;&gt;codePointBefore()&lt;/h3&gt;

&lt;p&gt;Returns the Unicode of the character before the specified index&lt;/p&gt;

&lt;h3 id=&quot;codepointcount&quot;&gt;codePointCount()&lt;/h3&gt;

&lt;p&gt;Returns the number of Unicode values found in a string&lt;/p&gt;

&lt;h3 id=&quot;compareto&quot;&gt;compareTo()&lt;/h3&gt;

&lt;p&gt;Compares two strings lexicographically&lt;/p&gt;

&lt;h3 id=&quot;comparetoignorecase&quot;&gt;compareToIgnoreCase()&lt;/h3&gt;

&lt;p&gt;Compares two strings lexicographically, ignoring case differences&lt;/p&gt;

&lt;h3 id=&quot;concat&quot;&gt;concat()&lt;/h3&gt;

&lt;p&gt;Appends a string to the end of another string&lt;/p&gt;

&lt;h3 id=&quot;contains&quot;&gt;contains()&lt;/h3&gt;

&lt;p&gt;Checks whether a string contains a sequence of chracters&lt;/p&gt;

&lt;h3 id=&quot;contentequals&quot;&gt;contentEquals()&lt;/h3&gt;

&lt;p&gt;Checks whether a string contains the exact same sequence of characters of the specified CharSequence or StringBuffer&lt;/p&gt;

&lt;h3 id=&quot;copyvalueof&quot;&gt;copyValueOf()&lt;/h3&gt;

&lt;p&gt;Returns a String that represents the characters of the character array&lt;/p&gt;

&lt;h3 id=&quot;endswith&quot;&gt;endsWith()&lt;/h3&gt;

&lt;p&gt;Checks whether a string ends with the specified character(s)&lt;/p&gt;

&lt;h3 id=&quot;equals&quot;&gt;equals()&lt;/h3&gt;

&lt;p&gt;Compares two strings&lt;/p&gt;

&lt;h3 id=&quot;equalsignorecase&quot;&gt;equalsIgnoreCase()&lt;/h3&gt;

&lt;p&gt;Compares two strings, ignoring case considerations&lt;/p&gt;

&lt;h3 id=&quot;format&quot;&gt;format()&lt;/h3&gt;

&lt;p&gt;Returns a formatted string using the specified locale, format string and arguments&lt;/p&gt;

&lt;h3 id=&quot;getbytes&quot;&gt;getBytes()&lt;/h3&gt;

&lt;p&gt;Encodes this String into a sequence of bytes using the named charset, storing the result into a new byte array&lt;/p&gt;

&lt;h3 id=&quot;getchars&quot;&gt;getChars()&lt;/h3&gt;

&lt;p&gt;Copies characters from a string to an array of chars&lt;/p&gt;

&lt;h3 id=&quot;hashcode&quot;&gt;hashCode()&lt;/h3&gt;

&lt;p&gt;Returns the hash code of a string&lt;/p&gt;

&lt;h3 id=&quot;indexof&quot;&gt;indexOf()&lt;/h3&gt;

&lt;p&gt;Returns the position of the first found occurrence of specified characters in a string&lt;/p&gt;

&lt;h3 id=&quot;intern&quot;&gt;intern()&lt;/h3&gt;

&lt;p&gt;Returns the canonical representation for the string object&lt;/p&gt;

&lt;h3 id=&quot;isempty&quot;&gt;isEmpty()&lt;/h3&gt;

&lt;p&gt;Checks whether a string is empty or not&lt;/p&gt;

&lt;h3 id=&quot;lastindexof&quot;&gt;lastIndexOf()&lt;/h3&gt;

&lt;p&gt;Returns the position of the last found occurrence of specified characters in a string&lt;/p&gt;

&lt;h3 id=&quot;length&quot;&gt;length()&lt;/h3&gt;

&lt;p&gt;Returns the length of a specified string&lt;/p&gt;

&lt;h3 id=&quot;matches&quot;&gt;matches()&lt;/h3&gt;

&lt;p&gt;Searches a string for a match against a regular expression, and returns the matches&lt;/p&gt;

&lt;h3 id=&quot;offsetbycodepoints&quot;&gt;offsetbyCodePoints()&lt;/h3&gt;

&lt;p&gt;Returns the index within this String that is offset from the given index by codePointOffset code points&lt;/p&gt;

&lt;h3 id=&quot;regionmatches&quot;&gt;regionMatches()&lt;/h3&gt;

&lt;p&gt;Tests if two string regions are equal&lt;/p&gt;

&lt;h3 id=&quot;replace&quot;&gt;replace()&lt;/h3&gt;

&lt;p&gt;Searches a string for a specified value, and returns a new string where the specified values are replaced&lt;/p&gt;

&lt;h3 id=&quot;replacefirst&quot;&gt;replaceFirst()&lt;/h3&gt;

&lt;p&gt;Replaces the first occurrence of a substring that matches the given regular expression with the given replacement&lt;/p&gt;

&lt;h3 id=&quot;replaceall&quot;&gt;replaceAll()&lt;/h3&gt;

&lt;p&gt;Replaces each substring of this string that matches the given regular expression with the given replacement&lt;/p&gt;

&lt;h3 id=&quot;split&quot;&gt;split()&lt;/h3&gt;

&lt;p&gt;Splits a string into an array of substrings&lt;/p&gt;

&lt;h3 id=&quot;startswith&quot;&gt;startsWith()&lt;/h3&gt;

&lt;p&gt;Check whether a string starts with specified characters&lt;/p&gt;

&lt;h3 id=&quot;subsequence&quot;&gt;subSequence()&lt;/h3&gt;

&lt;p&gt;Returns a new character sequence that is a subsequence of this sequence&lt;/p&gt;

&lt;h3 id=&quot;substring&quot;&gt;substring()&lt;/h3&gt;

&lt;p&gt;Returns a new string which is the substring of a specified string&lt;/p&gt;

&lt;h3 id=&quot;tochararray&quot;&gt;toCharArray()&lt;/h3&gt;

&lt;p&gt;Convert this string to a new characer array&lt;/p&gt;

&lt;h3 id=&quot;tolowercase&quot;&gt;toLowerCase()&lt;/h3&gt;

&lt;p&gt;Converts a string to lower case letters&lt;/p&gt;

&lt;h3 id=&quot;tostring&quot;&gt;toString()&lt;/h3&gt;

&lt;p&gt;Returns the value of a String object&lt;/p&gt;

&lt;h3 id=&quot;touppercase&quot;&gt;toUpperCase()&lt;/h3&gt;

&lt;p&gt;Converts a string to upper case letters&lt;/p&gt;

&lt;h3 id=&quot;trim&quot;&gt;trim()&lt;/h3&gt;

&lt;p&gt;Removes whitespace from both ends of a string&lt;/p&gt;

&lt;h3 id=&quot;valueof&quot;&gt;valueOf()&lt;/h3&gt;

&lt;p&gt;Returns the string representation of the specified value&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">Java String methods</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Reference - Java Keyword</title>
      <link href="http://localhost:4000/reference-java_keyword" rel="alternate" type="text/html" title="Reference - Java Keyword" />
      <published>2021-12-19T18:00:00+09:00</published>
      <updated>2021-12-19T18:00:00+09:00</updated>
      <id>http://localhost:4000/reference-java_keyword</id>
      <content type="html" xml:base="http://localhost:4000/reference-java_keyword">&lt;h2 id=&quot;java-reserved-keywords&quot;&gt;Java reserved keywords&lt;/h2&gt;

&lt;h3 id=&quot;abstract&quot;&gt;abstract&lt;/h3&gt;

&lt;p&gt;A non-access modifier.&lt;/p&gt;

&lt;p&gt;Used for classes and methods&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;An abstract class cannot be used to create objects (to access it, it must be inherited from another class)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;An abstract method can only be used in an abstract class(it does not have a body, the body is provided by the subclass)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-abstract_interface&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-abstraction&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;assert&quot;&gt;assert&lt;/h3&gt;

&lt;p&gt;For debugging&lt;/p&gt;

&lt;h3 id=&quot;boolean&quot;&gt;boolean&lt;/h3&gt;

&lt;p&gt;A data type that can only store true and false values&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-operator&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;break&quot;&gt;break&lt;/h3&gt;

&lt;p&gt;breaks out of a loop or a switch block&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;byte&quot;&gt;byte&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from –128 and 127&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;case&quot;&gt;case&lt;/h3&gt;

&lt;p&gt;Marks a block of code in switch statements&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;catch&quot;&gt;catch&lt;/h3&gt;

&lt;p&gt;Catches exceptions generated by try statements&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-exception&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;char&quot;&gt;char&lt;/h3&gt;

&lt;p&gt;A data type that is used to store a single character&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-variable&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;class&quot;&gt;class&lt;/h3&gt;

&lt;p&gt;Defines a class&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-class&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-class_static&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;continue&quot;&gt;continue&lt;/h3&gt;

&lt;p&gt;Continues to the next iteration of a loop&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;default&quot;&gt;default&lt;/h3&gt;

&lt;p&gt;Specifies the default block of code in a switch statement&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;do&quot;&gt;do&lt;/h3&gt;

&lt;p&gt;Used together with while to create a do-while loop&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;double&quot;&gt;double&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from 1.7e-308 to 1.7e+308&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;else&quot;&gt;else&lt;/h3&gt;

&lt;p&gt;Used in conditional statements&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;enum&quot;&gt;enum&lt;/h3&gt;

&lt;p&gt;Declares an enumerated(unchangeable) type&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-enum&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;exports&quot;&gt;exports&lt;/h3&gt;

&lt;p&gt;Exports a package with a module&lt;/p&gt;

&lt;h3 id=&quot;extends&quot;&gt;extends&lt;/h3&gt;

&lt;p&gt;Extends a class(indicates that a class is inherited from another class)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-inheritance&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;final&quot;&gt;final&lt;/h3&gt;

&lt;p&gt;A non-access modifier, makes non-changeable(impossible to inherit or override)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-abstract_interface&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-variable&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;finally&quot;&gt;finally&lt;/h3&gt;

&lt;p&gt;Used with exceptions, a block of code that will be executed no matter if there is an exception or not&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-exception&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;float&quot;&gt;float&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers form 3.4e-038 to 3.4e+038&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;for&quot;&gt;for&lt;/h3&gt;

&lt;p&gt;Create a for loop&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-loop&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;if&quot;&gt;if&lt;/h3&gt;

&lt;p&gt;Makes a conditional statement&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;implements&quot;&gt;implements&lt;/h3&gt;

&lt;p&gt;Implements an interface&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-interface_trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-abstraction&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;import&quot;&gt;import&lt;/h3&gt;

&lt;p&gt;Used to import a package, class or interface&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-package&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-package&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;instanceof&quot;&gt;instanceof&lt;/h3&gt;

&lt;p&gt;Check whether an object is an instance of a specific class or an interface&lt;/p&gt;

&lt;h3 id=&quot;int&quot;&gt;int&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from –2147483648 to 2147483647&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;interface&quot;&gt;interface&lt;/h3&gt;

&lt;p&gt;Used to declare a special type of class that only contains abstract methods&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-interface_trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-abstraction&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;long&quot;&gt;long&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from –9223372036854775808 to 9223372036854775808&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;module&quot;&gt;module&lt;/h3&gt;

&lt;p&gt;Declares a module&lt;/p&gt;

&lt;h3 id=&quot;native&quot;&gt;native&lt;/h3&gt;

&lt;p&gt;Specifies that a method is not implemented in the same Java source file(but in another language)&lt;/p&gt;

&lt;h3 id=&quot;new&quot;&gt;new&lt;/h3&gt;

&lt;p&gt;Creates new objects&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-class&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-class_static&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;package&quot;&gt;package&lt;/h3&gt;

&lt;p&gt;Declares a package&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-package&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-package&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;private&quot;&gt;private&lt;/h3&gt;

&lt;p&gt;An access modifier, making accessible within the declared class(so class can’t use)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-modifier&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;protected&quot;&gt;protected&lt;/h3&gt;

&lt;p&gt;An access modifier, making accessible in the same package and subclasses(so class can’t use)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-modifier&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;public&quot;&gt;public&lt;/h3&gt;

&lt;p&gt;An access modifier, making accessible by any other class&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-modifier&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;requires&quot;&gt;requires&lt;/h3&gt;

&lt;p&gt;Specifies required libraries inside a module&lt;/p&gt;

&lt;h3 id=&quot;return&quot;&gt;return&lt;/h3&gt;

&lt;p&gt;Finished the execution of a method, and can be used to return a value from a method&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-return&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-method&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;short&quot;&gt;short&lt;/h3&gt;

&lt;p&gt;A data type that can store whole numbers from –32768 to 32767&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-intro_var&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-datatype&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;static&quot;&gt;static&lt;/h3&gt;

&lt;p&gt;A non-access modifier used for method and attributes&lt;/p&gt;

&lt;p&gt;It can be accessed without creating an object of a class&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-static_constructor&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-class_static&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;strictfp&quot;&gt;strictfp&lt;/h3&gt;

&lt;p&gt;Restrict the precision and rounding of floating point calculations&lt;/p&gt;

&lt;h3 id=&quot;super&quot;&gt;super&lt;/h3&gt;

&lt;p&gt;Refers to superclass(parent) objects&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;switch&quot;&gt;switch&lt;/h3&gt;

&lt;p&gt;Selects one of many code blocks to be executed&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-conditional&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-conditional&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;synchronized&quot;&gt;synchronized&lt;/h3&gt;

&lt;p&gt;A non-access modifier, which specifies that methods can only be accessed by one thread at a time&lt;/p&gt;

&lt;h3 id=&quot;this&quot;&gt;this&lt;/h3&gt;

&lt;p&gt;Refers to the current object in a method or constructor&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-access_modifier_extends&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;throw&quot;&gt;throw&lt;/h3&gt;

&lt;p&gt;Creates a custom error&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-trycatch&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;throws&quot;&gt;throws&lt;/h3&gt;

&lt;p&gt;Indicates what exceptions may be thrown by a method&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-exception&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;transient&quot;&gt;transient&lt;/h3&gt;

&lt;p&gt;A non-access modifier, which specifies that an attribute is not part of an object’s persistent state&lt;/p&gt;

&lt;h3 id=&quot;try&quot;&gt;try&lt;/h3&gt;

&lt;p&gt;Creates a try…catch statement&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-throws&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-exception&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;var&quot;&gt;var&lt;/h3&gt;

&lt;p&gt;Declares a variable&lt;/p&gt;

&lt;h3 id=&quot;void&quot;&gt;void&lt;/h3&gt;

&lt;p&gt;Specifies that a method should not have a return value&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-return&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-method&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;volatile&quot;&gt;volatile&lt;/h3&gt;

&lt;p&gt;Indicates that an attribute is not cached thread-locally&lt;/p&gt;

&lt;p&gt;Is always read from the “main memory”&lt;/p&gt;

&lt;h3 id=&quot;while&quot;&gt;while&lt;/h3&gt;

&lt;p&gt;Creates a while loop&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./lecture-loop&quot;&gt;관련 수업기록 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./w3schools-loop&quot;&gt;관련 w3s 메모 보러가기&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Spongebob53</name>
        
        
      </author>

      

      
        <category term="reference" />
      

      
        <summary type="html">Java reserved keywords</summary>
      

      
      
    </entry>
  
</feed>
